<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">
<FTCS Version="1.1">
<!-- 
$Revision: 21 $ 
$Modtime: 11/06/02 2:15p $ 
-->

<!--
- Confidential and Proprietary Information of FutureTense Inc.
-					All Rights Reserved.
-
- BuildCheckRequiredProperties.xml
-
- DESCRIPTION
-
- HISTORY 
  [2007-09-18 KGF]
  * XSS fixes (adapted from 6.3 fixes):
    * isCleanString function usage
  * changed definitions of 'obj' to just forms[0] (not .elements[0])
  
  Sathish Paul Leo - 2008-3-21
 *Added start date and end date validation
  [2008-03-2x KGF]
  * Added validation for ADF-defined date fields
-->

<!--
	generate JavaScript for all required properties
	given a property list, check to see
	which ones are required. For each one
	that is, produce the appropriate
	JavaScript
-->
<CALLELEMENT NAME="OpenMarket/Xcelerate/Scripts/FormatDate" />
<CALLELEMENT NAME="OpenMarket/Xcelerate/Scripts/ValidateInputForXSS" />
<CALLELEMENT NAME="OpenMarket/Xcelerate/Util/DojoFileCheck" />
<if COND="IsVariable.editpropertylist=true">
<then>
    <stringlist NAME="Proplist" STR="Variables.editpropertylist" DELIM=","/>
</then>
<else>
	<if COND="IsVariable.assetmaker/propertylist=true">
	<then>
	    <stringlist NAME="Proplist" STR="Variables.assetmaker/propertylist" DELIM=","/>
	</then>
	</if>
</else>
</if>
<if COND="IsVariable.assetmaker/ewebeditpropertylist=true">
<then>
	<callelement NAME="OpenMarket/AssetMaker/EWebEditProCheckFields"/>
</then>
<else>
	<script LANGUAGE="JavaScript">
	<![CDATA[
	var dateFields = new Array(); //keep track of date fields on the form
    var obj = document.forms[0];
	function myalert(x,xlatstr)
	{
		var replacestr=/\bVariables.name\b/   ;
		var newstr=xlatstr.replace(replacestr, x) ;
		alert(newstr);
	}

	fck_loadCompleteCount=0;
    function checkCKloaded()
    {
        if (typeof CKEDITOR == "object") 
		{
			var _editorInstances = CKEDITOR.instances;
			instancesCount =0;
			for (instanceName in CKEDITOR.instances)
            {
                instancesCount++;
            }
            if (instancesCount != fck_loadCompleteCount)
            {
                ]]>
                alert("<XLAT.STREAM KEY="dvin/UI/Pageloadingtryagain"  ESCAPE="true" ENCODE="false"/>" );
                <![CDATA[
                return false;
            }
        }
        return true;
    }

	function checkfieldsnosubmit()
	{
	    if (!checkCKloaded())
	        return false;
		]]>
        <replaceall LIST="Variables.AssetType, Proplist.ITEM">
        <if COND="IsList.Proplist=true">
            <then>
                <loop LIST="Proplist">
                <setvar NAME="fieldType" VALUE="Variables.assetmaker/property/Proplist.ITEM/inputform/type"/>
                <!-- FCKEditor has been deprecated in Oracle Sites 11gR1 release and will be removed from here in future-->
				<SETVAR NAME="CK_FCK_EDITOR" VALUE="false"/>
				<IF COND="Variables.fieldType=CKEDITOR">
				<THEN>
					<SETVAR NAME="CK_FCK_EDITOR" VALUE="true"/>
				</THEN>
				</IF>
				<IF COND="Variables.fieldType=FCKEDITOR">
				<THEN>
					<SETVAR NAME="CK_FCK_EDITOR" VALUE="true"/>
				</THEN>
				</IF>
				<if COND="Variables.CK_FCK_EDITOR=true">
				<then>
                     <removevar NAME="maxlength"/>
                     <setvar NAME="maxlength" VALUE="0"/>
                     <if cond="IsVariables.assetmaker/property/Proplist.ITEM/inputform/maxlength=true">
                     <then>
                        <setvar NAME="maxlength" VALUE="Variables.assetmaker/property/Proplist.ITEM/inputform/maxlength"/>
                     </then>
                     <else>
                        <BEGINS STR="Proplist.ITEM" WHAT="url"/>
                        <if COND="Variables.errno=0">
                        <then>
                            <if COND="IsVariable.assetmaker/property/Proplist.ITEM/storage/length=true">
                            <then>
                                <setvar NAME="maxlength" VALUE="Variables.assetmaker/property/Proplist.ITEM/storage/length"/>
                            </then>
                            </if>
                        </then>
                        </if>
                    </else>
                    </if>
                     <replaceall LIST="Variables.maxlength">
                     <![CDATA[                      
					  if (Variables.maxlength != '0'){
                           var attr = 'Variables.AssetType:Proplist.ITEM';
                           var ockeditor = CKEDITOR.instances[attr];
                           if(ockeditor)
								obj.elements[attr].value = ockeditor.getData();
                           var actualText = obj.elements[attr].value.replace( /<[^<|>]+?>/gi,'' );
						   actualText = actualText.replace(/&lt;/gi,'<');
						   actualText = actualText.replace(/&gt;/gi,'>');
						   actualText = actualText.replace(/&amp;/gi,'&');
						   actualText = actualText.replace(/(\r\n|\n|\r)/gm,'');

                           var actualLen = actualText.length;
                           if (actualLen  > Variables.maxlength)
                           {
                                var xlatstr= ']]><XLAT.STREAM KEY="dvin/AT/Common/editorTexttooLong" ESCAPE="true" ENCODE="false"/><![CDATA[' ;
                                var newstr=xlatstr.replace("Variables.fieldname",'Proplist.ITEM') ;
                                newstr=newstr.replace("Variables.len",'Variables.maxlength') ;
                                alert(newstr);
                                return false;
                           }
                     }  
                     ]]>
                     </replaceall>
                </then>
                </if>
                </loop>
            </then>
            </if>
        <![CDATA[        
		var isclean = isCleanString(obj.elements['Variables.AssetType:name'].value, '*');		
		if (!isclean) {
			alert("]]><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ApostropheNotAllowed" ESCAPE="true" ENCODE="false"/><![CDATA[");
			return false;
		}
		if ( (obj.elements['Variables.AssetType:name'].value.length == 0) ||
			 (obj.elements['Variables.AssetType:name'].value.match(/^[\s]/) != null) )
		{
		
			//Here means something is wrong, let us figure out what
		
			if (obj.elements['Variables.AssetType:name'].value.length == 0) {
				]]>
				alert("<XLAT.STREAM KEY="dvin/Assetmaker/SpecifyUniqueName" ESCAPE="true" ENCODE="false"/> ");
				<![CDATA[
			}
				
			if ( obj.elements['Variables.AssetType:name'].value.match(/^[\s]/) != null ) {
				]]>
				alert("<XLAT.STREAM KEY="dvin/Assetmaker/NameNotStartBySpace" ESCAPE="true" ENCODE="false"/> ");
				<![CDATA[
			}
	
			return false;
		}
		]]>
		</replaceall>
	
		<if COND="IsVariable.assetmaker/requiredpropertylist=true">
		<then>
	 	    <stringlist NAME="requiredlist" STR="Variables.assetmaker/requiredpropertylist" DELIM=","/>
		    <loop LIST="requiredlist">
		    	<setvar NAME="fielddescription" VALUE="Variables.assetmaker/property/requiredlist.ITEM/description"/>
		    	<replaceall LIST="Variables.AssetType, requiredlist.ITEM, Variables.fielddescription">
				<![CDATA[
				// [2007-11-01 KG] added this var to save us from long-winded repetition.
				var attrName = 'Variables.AssetType:requiredlist.ITEM';
				// [2007-11-01 KG] ported from flex code:
				// for CKEditor, update textarea input with current value
				if (typeof CKEDITOR == "object") 
				{
				    var ockeditor = CKEDITOR.instances[attrName];
				    if (ockeditor) 
					{    
						obj.elements[attrName].value= ockeditor.getData();
					}                    
				} // end CKEditor
				if (obj.elements[attrName].value==""){
					var throwError = true;
					if(obj.elements[attrName].length){
						for(var i=0;i<obj.elements[attrName].length;i++)
						if(obj.elements[attrName][i].checked) {throwError = false;}
					}
					if (obj.elements[attrName].type=="file")
						throwError = (obj.elements['UploadDeleterequiredlist.ITEM'].value=="nofile" ||
								 obj.elements['UploadDeleterequiredlist.ITEM'].checked==true ) ? true : false;
					if(throwError){	
						]]>
						alert("<XLAT.STREAM KEY="dvin/Assetmaker/SpecifyFieldDes" ESCAPE="true" ENCODE="false"/> ");
						<![CDATA[
						return false;
					}
				}
				if (obj.elements[attrName].selectedIndex==-1)
				{
					]]>
					alert("<XLAT.STREAM KEY="dvin/Assetmaker/SpecifyFieldDes" ESCAPE="true" ENCODE="false"/>");
					<![CDATA[
					return false;
				}
				]]>
				</replaceall>
		    </loop>
		</then>
		</if>
		<![CDATA[
		// validate start/end date fields:
		if (!checkStartEndDateValidity()) return false;
		
		// validate other date fields:
		for (var i = 0; i < dateFields.length; i++) {
			if (obj.elements[dateFields[i]].value == '')
				continue; //nothing to validate if blank
			if (obj.elements[dateFields[i]].value && checkDate(obj.elements[dateFields[i]].value) < 0) {
				var replacestr = /\bVariables\.datestr\b/;
				]]>
				var xlatstr = '<XLAT.STREAM KEY="dvin/AT/Common/ThedateisnotvalidFormatthedate"  ESCAPE="true" ENCODE="false"/>';
				<![CDATA[
				xlatstr = xlatstr.replace(replacestr, obj.elements[dateFields[i]].value);
				alert(xlatstr);
				obj.elements[dateFields[i]].focus();
				return false;
			}
			padDate(obj.elements[dateFields[i]]);
		}
		// Executing PreSave call for customizing attributes values before form submit.
]]> 
			var _preSave_ = '<STRING.STREAM VALUE="Variables._preSave_"/>'; 
<![CDATA[
			if(_preSave_ === 'true')
				executePreSave();
		return true;
	}
	
	function checkfields(pagename)
	{
		if (checkfieldsnosubmit())
		{
			obj.submit();
		}
		return false;
	}
	
	function executePreSave()
	{
		fw.ui.dijit.form.preSave().execute({AssetType: obj.elements['AssetType'].value, PubName: obj.elements['PubName'].value, helper: fw.ui.dijit.form.preSaveFormHelper()});
	}
	
	function executeAfterLoad()
	{
		fw.ui.dijit.form.afterLoad().execute({AssetType: obj.elements['AssetType'].value, PubName: obj.elements['PubName'].value, helper: fw.ui.dijit.form.afterLoadFormHelper()});
	}
	
	dojo.addOnLoad(function() {
		// Executing AfterLoad call for customizing attributes values after form load.
]]> 	
		var _afterLoad_ = '<STRING.STREAM VALUE="Variables._afterLoad_"/>'; 
<![CDATA[
		if(_afterLoad_ === 'true')
			executeAfterLoad();
	});
	
	function submitForm()
	{
		//Fix for PR 27989. When the form is saved from the edit screen it is already locked if its revision tracked so in that case we need to pass this value to true so that the 
		// edit form doesn't try to checkout the asset.
		if(obj.elements['alreadylocked']) 
			obj.elements['alreadylocked'].value=true;
		return checkfields();
	}
	]]><replaceall LIST="Variables.AssetType">
    <![CDATA[ 
	function getAssetName()
	{
		return obj.elements['Variables.AssetType:name'].value;
	}
	]]>
	</replaceall>
	<![CDATA[
function SelectFromTreeAssocTAMult(widgetName, validTypes)
{
	var id,name,type, subtype, selValue={};
	var validTypesAndComma = validTypes+",";
	var EncodedString = parent.frames["XcelTree"].document.TreeApplet.exportSelections()+'';
	var idArray = EncodedString.split(',');
    var assetcheck = unescape(idArray[0]);
	var nodes= [];
	nodes = dojo.query('div[name='+widgetName+']');
	if(nodes.length === 0)
		nodes = dojo.query('input[name='+widgetName+']');
	var typeWidgetIns = dijit.getEnclosingWidget(nodes[0]);	
	if (assetcheck.indexOf('assettype=')!=-1 && assetcheck.indexOf('id=')!=-1)
	{
		var test = new String(EncodedString);
		var allNodes = test.split(":");
		if (allNodes.length==1)
		{
			alert("]]><XLAT.STREAM KEY="dvin/UI/Error/Nonodesareselectedinthetree" ENCODE="false" ESCAPE="true"/><![CDATA[");
			return;
		}
		var currentNode = 0;
		for (currentNode = 0;currentNode<allNodes.length-1;currentNode++)
		{
			var nameVal = allNodes[currentNode].split(",");					
			var i = 0;
			for (i=0;i<nameVal.length;i+=2)
			{
				id = unescape(nameVal[i]);
				var splitid = id.split(',');
				if (splitid.length==1)
				{
					var xlatstr=']]><XLAT.STREAM KEY="dvin/UI/Error/Nodeidisnotavalidselection" ENCODE="false" ESCAPE="true"/><![CDATA[';
					var replacestr=/Variables.id/;
					xlatstr = xlatstr.replace(replacestr,id);
					alert(xlatstr);
					return;
				}
					
				var splitpair = splitid[1].split("=");
				if (validTypesAndComma.indexOf(splitpair[1]+",")==-1)
				{
]]>
					var xlatstr='<XLAT.STREAM KEY="dvin/UI/Error/selectionfollowingtypesvalidTypesinvalid" ENCODE="false" ESCAPE="true"/>';
					var replacestr=/Variables.validTypes/;
					xlatstr = xlatstr.replace(replacestr,validTypes);
					var replacestr=/Variables.splitpair/;
					alert(xlatstr.replace(replacestr,splitpair[1]));
<![CDATA[
					return;
				}
				
				id = (splitid[0].split('='))[1];
				type = (splitid[1].split('='))[1];
				subtype = (splitid[3].split('='))[1];
				name = (splitid[2].split('='))[1];
				name = name.replace(/\+/g," ");
				subtype = subtype.replace(/\+/g," ");
				type = type.replace(/\+/g," ");	
			}			

			selValue = {
				'id':id,
				'name':name,
				'subtype':subtype,
				'type':type
			};
			typeWidgetIns.setSelectedValue(selValue);
		}
	}
	else
	{
	 alert("]]><XLAT.STREAM KEY="dvin/UI/PleaseSelectAssetFromTree" ENCODE="false" ESCAPE="true"/><![CDATA[");
	}
}
]]>
	</script>
</else>
</if>


</FTCS> 

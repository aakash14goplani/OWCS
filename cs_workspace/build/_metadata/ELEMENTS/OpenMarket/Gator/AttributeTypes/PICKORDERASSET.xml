<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">
<FTCS Version="1.1">
	<!-- OpenMarket/Gator/AttributeTypes/PICKORDERASSET
	-
	- INPUT
	-
	- OUTPUT
	-
	-->
    <IF COND="Variables.MultiValueEntry=yes">
		<THEN>         
            <IF COND="IsVariable._PICKORDERASSETVALS_=false">
            <THEN>
                <IF COND="IsCounter.PICKORDERASSETINSTANCE=false">
                <THEN>
                    <SETCOUNTER NAME="PICKORDERASSETINSTANCE" VALUE="1"/>
                </THEN>
                <ELSE>
                    <INCCOUNTER NAME="PICKORDERASSETINSTANCE" VALUE="1"/>
                </ELSE>
                </IF>
                <SETVAR NAME="_PICKORDERASSETATTR_" VALUE="Variables.cs_SingleInputName"/>
                <!-- This attribute will hold the ordinal:id pairs -->

                <IF COND="IsList.AttrValueList=false">
                <THEN>
                    <SETVAR NAME="_PICKORDERASSETVALS_" VALUE="Variables.empty"/>
                </THEN>
                <ELSE>                
                    <HASH.CREATE NAME="hCurrentOrdinals" LIST="AttrValueList" COLUMN="value"/>
                    <HASH.TOSTRING NAME="hCurrentOrdinals" DELIM=";" VARNAME="_PICKORDERASSETVALS_"/>
                    <STRING.SORT VALUE="Variables._PICKORDERASSETVALS_" DELIM=";" VARNAME="_PICKORDERASSETVALS_"/>
                </ELSE>
                </IF>
                <SETVAR NAME="doDefaultDisplay" VALUE="no"/>

                <INPUT TYPE="HIDDEN" NAME="Variables.AttrNumberRequireInfo" VALUE="*Variables.cs_SingleInputName*Variables.AttrName*ReqFalse*Variables.type!" REPLACEALL="Variables.cs_SingleInputName,Variables.AttrName,Variables.AttrNumber,Variables.type"/>
                <INPUT TYPE="hidden" NAME="MSVariables.AttrName" VALUE="yes" REPLACEALL="Variables.AttrName"/>
                <INPUT TYPE="HIDDEN" NAME="Variables.cs_SingleInputName" VALUE="Variables._PICKORDERASSETVALS_" REPLACEALL="Variables.cs_SingleInputName,Variables._PICKORDERASSETVALS_"/>
            </THEN>
            <ELSE>
                <SETVAR NAME="_PICKORDERASSETOVERRIDEATTR_" VALUE="Variables.cs_SingleInputName"/>
                <IF COND="Counters.PICKORDERASSETINSTANCE=1">
                <THEN>
                    <SCRIPT LANGUAGE="JavaScript">
                		<![CDATA[
                	function moveup(src,ValueA,OrderA)
                	{
                		var i, temp;
                		for (i=0; i<src.options.length; i++)
                		{
                			if (src.options[i].selected)
                			{
                				if (i!=0)
                				{
                					temp = src.options[i-1];
                					items=new Option(temp.text,temp.value);
                					otheritem=new Option(src.options[i].text,src.options[i].value);
                					otheritem.selected=1;
                					var j=i-1;
                					src.options[j]=otheritem;
                					src.options[i]=items;
                				}
                			}
                		}
                			resetAttributeValues(src,ValueA,OrderA);
                	}
                	function movedown(src,ValueA,OrderA)
                	{
                		var i, temp;
                		for (i=src.options.length-1; i>=0; i--)
                		{
                			if (src.options[i].selected)
                			{
                				if (i!=src.options.length-1)
                				{
                					temp = src.options[i+1];
                					items=new Option(temp.text,temp.value);
                					otheritem=new Option(src.options[i].text,src.options[i].value);
                					otheritem.selected=1;
                					var j=i+1;
                					src.options[j]=otheritem;
                					src.options[i]=items;
                				}
                			}
                		}
                		resetAttributeValues(src,ValueA,OrderA);
                	}
                	
                	function remove(src,ValueA,OrderA)
                	{
                		var i;
                		i = 0;
                		while (i<src.options.length)
                		{
                			if (src.options[i].selected)
                				src.options[i]=null
                			else
                				i = i + 1;
                		}
                		delNul(src)
                			resetAttributeValues(src,ValueA,OrderA);
                	}
                	
                	function resetAttributeValues(src,SelectAttr,OrdinalAttr)
                	{
                		var obj = document.forms[0].elements[0];
                		var strOdr = "";
                		var strLst = "";
                		
                		for (i = 0,j=1; i<src.options.length;i++,j++)
                		{
                        
                            if (src.options[i].value != '-1')
                            {
                    			if (i  == 0 ) {
                                    if (src.options[i].value.indexOf(':')==-1)
                    				    strOdr = "0001:" + src.options[i].value;
                                    else
                                        strOdr = "0001"+src.options[i].value.slice(src.options[i].value.indexOf(':'));
                    				strLst = src.options[i].value;
                    			}	
                                else {
                                    var paddedOrdinal = new String(j);
                                    var originalLength = paddedOrdinal.length;
                                    for (padIndex = 4; padIndex > originalLength; padIndex--)
                                        paddedOrdinal = '0'+paddedOrdinal;
                                    if (src.options[i].value.indexOf(':')==-1)
                    				    strOdr = strOdr + ";" + paddedOrdinal + ":" + src.options[i].value;
                                    else
                                        strOdr = strOdr + ";" + paddedOrdinal + src.options[i].value.slice(src.options[i].value.indexOf(':'));
                    				strLst = strLst + ";" + src.options[i].value;
                    			}
                            }
                		}
                 		
                        obj.form.elements[SelectAttr].value = strLst;
                        obj.form.elements[OrdinalAttr].value = strOdr;
                	}
                ]]>
                <IF COND="Variables.showSiteTree=true"><THEN>
                <![CDATA[
                    function PickOrderSelectFromTree(where,validTypes)
                    {
                    	var validTypesAndComma = validTypes+",";
                    	var obj = document.forms[0].elements[0];
                    	var id,name,newindex,items,assettype;
                    	
                    	if (validTypes==null) { ]]>
                    	alert("<XLAT.STREAM KEY="dvin/UI/Error/Thisassethasnorelatedassettypes" ENCODE="false" ESCAPE="true"/>");
                    	<![CDATA[ return; }
                    	
                    	var EncodedString = parent.frames["XcelTree"].document.TreeApplet.exportSelections()+'';
                       var idArray = EncodedString.split(',');
                       var assetcheck = unescape(idArray[0]);
                       if (assetcheck.indexOf('assettype=')!=-1 && assetcheck.indexOf('id=')!=-1)
                       {
                       
                       	// string is of the format: id=[id],[name]:repeat
                       	var test = new String(EncodedString);
                       	
                          var allNodes = test.split(":");
                       	if (allNodes.length==1){ ]]>
                       	alert("<XLAT.STREAM KEY="dvin/UI/Error/Nonodesareselectedinthetree" ENCODE="false" ESCAPE="true"/>");
                       	<![CDATA[ return;}
                       	
                       	var currentNode = 0;
                       	for (currentNode = 0;currentNode<allNodes.length-1;currentNode++)
                       	{
                       		var nameVal = allNodes[currentNode].split(",");
                       		var i = 0;
                       		for (i=0;i<nameVal.length;i+=2)
                       		{
                       			id = unescape(nameVal[i]);
                       			var splitid = id.split(',');
                       			if (splitid.length==1)
                       			{
                       				]]>
                       				alert("<XLAT.STREAM KEY="dvin/UI/Error/Nodeidisnotavalidselection" ENCODE="false" ESCAPE="true"/>");
                       				<![CDATA[
                       				return;
                       			}
                       				
                       			var splitpair = splitid[1].split("=");
                       			
                       			if (validTypesAndComma.indexOf(splitpair[1]+",")==-1)
                       			{
                       				]]>
                        			    var xlatstr='<XLAT.STREAM KEY="dvin/UI/Error/selectionfollowingtypesvalidTypesinvalid" ENCODE="false" ESCAPE="true"/>';
                                       var replacestr=/Variables.validTypes/;
                                       xlatstr = xlatstr.replace(replacestr,validTypes);
                                       var replacestr=/Variables.splitpair/;
                                       alert(xlatstr.replace(replacestr,splitpair[1]));
                             			<![CDATA[
                       				return;
                       			}
                       			assettype=splitpair[1];
                       			splitpair = splitid[0].split("=");
                       			id = splitpair[1];
                       				
                       			var name = nameVal[i+1].replace(/\+/g,' ');
                       			name = DecodeUTF8(name.substr(0, name.length));
                       		}
                            delNul(where);
                       		items=new Option(name,id);
                       			
                       		newIndex=where.options.length;
                       		
                            //check for duplicates, don't allow them
                            var skipItem = false; //flag set within loop
                       		for ( j=0; j < where.options.length ; j++ ) {
                       			if ( where.options[j].value == items.value ) {
                       				]]>
                          			    var xlatstr='<XLAT.STREAM KEY="dvin/UI/Error/AssetAlreadyInList" ENCODE="false" ESCAPE="true"/>';
                                       var replacestr=/Variables.name/;
                                       xlatstr = xlatstr.replace(replacestr,items.text);
                                       alert(xlatstr);
                       				<![CDATA[
                       				skipItem = true;
                       			}
                       		}
                            if (skipItem) continue;
                       		where.options[newIndex]=items;
                       		where.options[newIndex].selected=true;
                       		
                       	  } // end for (allNodes)
                       }
                       else
                       {
                          ]]>
                          alert("<XLAT.STREAM KEY="dvin/UI/PleaseSelectAssetFromTree" ENCODE="false" ESCAPE="true"/>");
                          <![CDATA[
                       }
                    }
                    ]]>
                </THEN></IF>
                	</SCRIPT>
                </THEN>
                </IF>

                <!--[2008-01-28 KGF] New code for picking from popup-->
                <IF COND="Variables.showSiteTree!=true"><THEN>
                <SETVAR NAME="currPOAid" VALUE="poaCounters.PICKORDERASSETINSTANCE" />
                <script type="text/javascript">
                    <SATELLITE.LINK ASSEMBLER="query" OUTSTRING="url_Variables.currPOAid" PAGENAME="OpenMarket/Xcelerate/Actions/PickAssetPopup">
                        <SATELLITE.ARGUMENT NAME="cs_environment" VALUE="Variables.cs_environment"/>
                        <SATELLITE.ARGUMENT NAME="cs_formmode" VALUE="Variables.cs_formmode"/>
                        <SATELLITE.ARGUMENT NAME="cs_PickAssetType" VALUE="Variables.attrassettype"/>
                        <SATELLITE.ARGUMENT NAME="cs_SelectionStyle" VALUE="single"/>
                        <SATELLITE.ARGUMENT NAME="cs_CallbackSuffix" VALUE="Variables.currPOAid"/>
                        <SATELLITE.ARGUMENT NAME="cs_FieldName" VALUE="Variables.AttrName"/>
                    </SATELLITE.LINK>
                function PickAssetCallback_<STRING.STREAM VALUE="Variables.currPOAid"/>(SelectedAssets)
                {<![CDATA[
                    //multiple select is not handled here
                    //(since AFAICT it's not possible with this popup)
                    var AssetInfo = SelectedAssets.split(":");
                    var where = document.forms[0].elements[']]><STRING.STREAM VALUE="PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE" /><![CDATA['];
                    var newOpt = new Option(AssetInfo[2], AssetInfo[1]);
                    var newIndex = where.options.length;
                    for ( j=0; j < newIndex; j++ ) {
                       	if ( where.options[j].value == newOpt.value ) {
                            var xlatstr=]]>'<XLAT.STREAM KEY="dvin/UI/Error/AssetAlreadyInList" ENCODE="false" ESCAPE="true"/>';
                            var replacestr=/Variables.name/;
                            xlatstr = xlatstr.replace(replacestr,newOpt.text);
                            alert(xlatstr);<![CDATA[
                       		return;
                       	}
                    }
                    where.options[newIndex]=newOpt;
                    where.options[newIndex].selected=true;
                    delNul(where);
                    resetAttributeValues(where,']]><STRING.STREAM VARIABLE="cs_SingleInputName" ENCODE="false" ESCAPE="true" />','<STRING.STREAM VARIABLE="_PICKORDERASSETATTR_" ENCODE="false" ESCAPE="true" /><![CDATA[');
                }
          
                function PickAssetPopup_]]><STRING.STREAM VALUE="Variables.currPOAid"/>() {<![CDATA[
                OpenPickAssetPopup(']]><ICS.RESOLVEVARIABLES NAME="$(Variables.url_$(Variables.currPOAid))" DELIMITED="true"/><![CDATA[', GetBannerHistory());
          }]]>
                </script>
                </THEN></IF>

                <!-- This attribute displays a multiselect box with values in the order described by Variables._PICKORDERASSETVALS_ -->
                <HASH.CREATE NAME="hSortedValues"/>
                <IF COND="Variables._PICKORDERASSETVALS_!=Variables.empty">
                <THEN>
                    <STRINGLIST NAME="lOrderedVals" STR="Variables._PICKORDERASSETVALS_" DELIM=";"/>
                </THEN>
                </IF>

    			<TR>
    				<CALLELEMENT NAME="OpenMarket/Gator/FlexibleAssets/Common/DisplayAttributeName"/>
    				<IF COND="Variables.RequiredAttr=true">
    					<THEN>
    						<SETVAR NAME="RequireInfo" VALUE="*Variables.cs_SingleInputName*Variables.currentAttrName*ReqTrue*Variables.AttrType*select-multiple!"/>
    					</THEN>
    					<ELSE>
    						<SETVAR NAME="RequireInfo" VALUE="*Variables.cs_SingleInputName*Variables.currentAttrName*ReqFalse*Variables.AttrType*select-multiple!"/>
    					</ELSE>
    				</IF>
    				<INPUT TYPE="hidden" NAME="Variables.AttrNumberRequireInfo" VALUE="Variables.RequireInfo" REPLACEALL="Variables.AttrNumber,Variables.RequireInfo"/>
    				<TD></TD>
    				<TD>
    					<SETVAR NAME="doDefaultDisplay" VALUE="no"/>
    					<ASSETTYPE.LIST LIST="currentAT" FIELD1="assettype" VALUE1="Variables.attrassettype"/>
                        <IF COND="Variables.showSiteTree=true"><THEN>
    					<XLAT.LOOKUP KEY="dvin/AT/Common/Selectassettypefromtree" ESCAPE="true" VARNAME="_XLAT_"/>
    					<XLAT.LOOKUP KEY="dvin/AT/Common/Selectassettypefromtree" VARNAME="_XLAT_alt"/>
                            <A HREF="javascript:void(0)" onclick="selAllAll('notsave'); PickOrderSelectFromTree(document.forms[0].elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'], 'Variables.attrassettype'); resetAttributeValues(document.forms[0].elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'],'Variables.cs_SingleInputName','Variables._PICKORDERASSETATTR_');"
                            onmouseover="window.status='Variables._XLAT_'; return true;" onmouseout="window.status='';return true;"
                            REPLACEALL="Variables._XLAT_,Variables.attrassettype,Variables.cs_SingleInputName,Counters.PICKORDERASSETINSTANCE,Variables._PICKORDERASSETATTR_">
                        <CALLELEMENT NAME="OpenMarket/Xcelerate/UIFramework/Util/TextButton"><ARGUMENT NAME="buttonkey" VALUE="UI/Forms/AddSelectedItems"/></CALLELEMENT></A>
            			<span class="small-text"><XLAT.STREAM KEY="dvin/AT/Forms/SelectTreeHint"/></span>
                        </THEN><ELSE>
                            <XLAT.LOOKUP KEY="dvin/AT/AttrTypes/BrowseforAttrName" ESCAPE="true" VARNAME="_XLAT_" />
                            <A HREF="javascript:void(0)" onclick="selAllAll('notsave'); PickAssetPopup_Variables.currPOAid(); return false;"
                            onmouseover="window.status='Variables._XLAT_'; return true;" onmouseout="window.status=''; return true;"
                            REPLACEALL="Variables._XLAT_,Variables.currPOAid"><CALLELEMENT NAME="OpenMarket/Xcelerate/UIFramework/Util/TextButton"><ARGUMENT NAME="buttonkey" VALUE="UI/Forms/Browse"/></CALLELEMENT></A>&nbsp;
                            <span class="small-text"><STRING.STREAM VARIABLE="_XLAT_"/></span>
                        </ELSE></IF>
            			<br/>
            			<HASH.CREATE NAME="treePickVals" LIST="AttrValueList" COLUMN="value"/>
                        <HASH.TOSTRING NAME="treePickVals" VARNAME="treePickVals" DELIM=";"/>
            			<INPUT TYPE="hidden" NAME="MSVariables.AttrName" VALUE="yes" REPLACEALL="Variables.AttrName"/>
    					<BR/>
    				</TD>
    			</TR>
    			<TR>
    				<TD>
    				</TD>
    			</TR>
    			<TR>
    				<TD></TD>
    				<TD></TD>
    				<TD>
    					<TABLE>
    						<TR>
    							<TD>
    								<HASH.CREATE NAME="treePickValues"/>
    								<HASH.CREATE NAME="treePickOrders"/>
                                    
    								<SETCOUNTER NAME="valCount" VALUE="1"/>
                                    <INPUT TYPE="HIDDEN" NAME="Variables.cs_SingleInputName" VALUE="Variables.cs_SingleInputName" REPLACEALL="Variables.cs_SingleInputName"/>
    								<SELECT name="PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE" size="10" MULTIPLE="yes" onBlur="delNul(this.form.elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'])" REPLACEALL="Counters.PICKORDERASSETINSTANCE">
                                        <IF COND="IsList.lOrderedVals=true">
                                        <THEN>
                                            <LOOP LIST="lOrderedVals">
                                                <STRING.STREAM VALUE="Counters.PICKORDERASSETINSTANCE: lOrderedVals.ITEM"/>
                                                <STRINGLIST NAME="lOrdinalValSplit" STR="lOrderedVals.ITEM" DELIM=":"/>
                                                <SETROW LIST="lOrdinalValSplit" ACTION="LAST"/>
                                                <HASH.ADD NAME="hSortedValues" VALUE="lOrdinalValSplit.ITEM"/>
                                                <ASSET.LIST TYPE="Variables.attrassettype" LIST="currentAsset" FIELD1="id" VALUE1="lOrdinalValSplit.ITEM"/>
                                                <OPTION VALUE="lOrdinalValSplit.ITEM" REPLACEALL="lOrdinalValSplit.ITEM"><STRING.STREAM LIST="currentAsset" COLUMN="name"/></OPTION>
                                            </LOOP>
                                        </THEN>
                                        </IF>
    									<LOOP LIST="AttrValueList">
                                            <STRING.STREAM VALUE="Counters.PICKORDERASSETINSTANCE: AttrValueList.value"/>
    										<HASH.ADD NAME="treePickValues" VALUE="AttrValueList.value"/>
    										<HASH.ADD NAME="treePickOrders" VALUE="Counters.valCount:AttrValueList.value"/>
                                            <HASH.CONTAINS NAME="hSortedValues" VALUE="AttrValueList.value" VARNAME="hasit"/>
                                            <IF COND="Variables.hasit=false">
                                            <THEN>
        										<ASSET.LIST TYPE="Variables.attrassettype" LIST="currentAsset" FIELD1="id" VALUE1="AttrValueList.value"/>
        										<OPTION VALUE="AttrValueList.value" REPLACEALL="AttrValueList.value"><STRING.STREAM LIST="currentAsset" COLUMN="name"/></OPTION>													
                                            </THEN>
                                            </IF>
    										<INCCOUNTER NAME="valCount" VALUE="1"/>
    									</LOOP>
    									<HASH.TOSTRING NAME="treePickValues" VARNAME="treePickValues" DELIM=";"/>
    									<HASH.TOSTRING NAME="treePickOrders" VARNAME="treePickOrders" DELIM=";"/>
    									<OPTION VALUE="-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</OPTION>
    								</SELECT>
                                    
    							</TD>
    							<TD>
    								<span class="table-header-small-text">
										<XLAT.STREAM KEY="dvin/UI/Admin/DisplayOrder" ESCAPE="false" ENCODE="false"/>
									</span><BR/>
    								<XLAT.LOOKUP KEY="dvin/Util/FlexAssets/Moveup" VARNAME="Moveup" ESCAPE="true"/>
    								<XLAT.LOOKUP KEY="dvin/Util/FlexAssets/Moveup" VARNAME="_XLAT_"/>
    								<A HREF="javascript:void(0)" onclick="moveup(document.forms[0].elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'],'Variables.cs_SingleInputName','Variables._PICKORDERASSETATTR_');" onmouseover="window.status='Variables.Moveup';return true;" onmouseout="window.status='';return true;" REPLACEALL="Variables.Moveup,Variables.cs_SingleInputName,Counters.PICKORDERASSETINSTANCE,Variables._PICKORDERASSETATTR_">
    									<IMG src="Variables.cs_imagedir/graphics/common/screen/moveup.gif" TITLE="Variables._XLAT_" ALT="Variables._XLAT_" HSPACE="4" VSPACE="4" BORDER="0" REPLACEALL="SessionVariables.locale,Variables.cs_imagedir,Variables._XLAT_"/><BR/>
    								</A>
    								<XLAT.LOOKUP KEY="dvin/Util/FlexAssets/Movedown" VARNAME="Movedown" ESCAPE="true"/>
    								<XLAT.LOOKUP KEY="dvin/Util/FlexAssets/Movedown" VARNAME="_XLAT_"/>
    								<A HREF="javascript:void(0)" onclick="movedown(document.forms[0].elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'],'Variables.cs_SingleInputName','Variables._PICKORDERASSETATTR_');" onmouseover="window.status='Variables.Movedown';return true;" onmouseout="window.status='';return true;"  REPLACEALL="Variables.Movedown,Variables.cs_SingleInputName,Counters.PICKORDERASSETINSTANCE,Variables._PICKORDERASSETATTR_">
    									<IMG src="Variables.cs_imagedir/graphics/common/screen/movedn.gif" TITLE="Variables._XLAT_" ALT="Variables._XLAT_" HSPACE="4" VSPACE="4" BORDER="0" REPLACEALL="SessionVariables.locale,Variables.cs_imagedir,Variables._XLAT_"/><BR/>
    								</A>
    								<XLAT.LOOKUP KEY="dvin/Common/AT/Removethisselection" ESCAPE="true" VARNAME="_XLAT_"/>
    								<XLAT.LOOKUP KEY="dvin/Common/AT/Removethisselection" VARNAME="_XLAT_alt"/>
    								<A HREF="javascript:void(0)" onclick="remove(document.forms[0].elements['PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE'],'Variables.cs_SingleInputName','Variables._PICKORDERASSETATTR_');" onmouseover="window.status='Variables._XLAT_';return true;" onmouseout="window.status='';return true;"  REPLACEALL="Variables._XLAT_,Variables.cs_SingleInputName,Counters.PICKORDERASSETINSTANCE,Variables._PICKORDERASSETATTR_">
    									<IMG SRC="Variables.cs_imagedir/graphics/common/icon/iconDeleteContent.gif" BORDER="0" TITLE="Variables._XLAT_alt" ALT="Variables._XLAT_alt" REPLACEALL="Variables._XLAT_alt,Variables.cs_imagedir"/>
    								</A>
    							</TD>
    						</TR>
    						<TR>
    							<TD COLSPAN="3">
                                    <SCRIPT LANGUAGE="JavaScript">
                                        resetAttributeValues(document.forms[0].elements['<STRING.STREAM VALUE="PICKORDERASSETSELECT_Counters.PICKORDERASSETINSTANCE"/>'],'<STRING.STREAM VALUE="Variables.cs_SingleInputName','Variables._PICKORDERASSETATTR_'"/>);
                                    </SCRIPT>
                                </TD>
    						</TR>
    					</TABLE>
    				</TD>
    			</TR>
                <REMOVEVAR NAME="_PICKORDERASSETVALS_"/>
                 <FLUSH LIST="lOrderedVals"/>
            </ELSE>
            </IF>
		</THEN>
	</IF>
</FTCS>

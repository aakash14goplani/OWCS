<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">

<FTCS Version="1.2">
<!-- 
$Logfile: /VerticalApps/XcelerateD/install/Gator/Populate/ElementCatalog/OpenMarket/Gator/FlexibleAssets/Attributes/ContentForm.xml $ 
$Revision: 95 $ 
$Modtime: 7/13/04 5:57p $ 

-->

<!--
- Confidential and Proprietary Information of FutureTense Inc.
-					All Rights Reserved.
-
- ContentForm.xml
-
- DESCRIPTION
-	Form for creating/editing  attributes
-    Required input variables: ContentDetails
-
- HISTORY 
  [2007-09-17 KG]
  * XSS fixes (adapted from 6.3 fixes):
    * isCleanString function usage
    * CSVAR NAME -> STRING.STREAM VALUE
  * changed definitions of 'obj' to just forms[0] (not .elements[0])
-->
<!--attributes/ContentForm.xml-->

<!-- this load is only done to get the descriptive name of the asset
     for the following JavaScript. -->
<div dojoType="dijit.layout.BorderContainer" class="bordercontainer">
<CALLELEMENT NAME="OpenMarket/Xcelerate/Scripts/ValidateInputForXSS" />
<ASSETTYPE.LOAD NAME="type" TYPE="Variables.AssetType"/>
<ASSETTYPE.SCATTER NAME="type" PREFIX="AssetTypeObj"/>

<!-- This form is repostable, and we are going to redirect the standard repost to our local javascript function to
       insure that the proper checking gets done when that repost happens. -->
<SETVAR NAME="repostContentFormJavascript" VALUE="repostFlexAttributeForm();"/>
<SETVAR NAME="isAssetRepostable" VALUE="true"/>

<setvar NAME="AttributeEditor" VALUE="null"/>

<INPUT TYPE="hidden" NAME="isReposted" VALUE="true"/>
<!-- For reposting, if the form has been a repost, we deal with it now -->
<IF COND="IsVariable.isReposted=true">
<THEN>
	<IF COND="Variables.isReposted=true">
	<THEN>
		<!-- Gather -->
		<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/GetOrSetVars">
			<argument NAME="GetOrSet" VALUE="set"/>
		</callelement>
		<!-- Rescatter -->
		<ASSET.SCATTER NAME="theCurrentAsset" PREFIX="ContentDetails"/>
	</THEN>
	</IF>
</THEN>
<ELSE>
	<SETVAR NAME="isReposted" VALUE="false"/>
</ELSE>
</IF>

<IF COND="Variables.isReposted=false">
<THEN>
	<!-- Use the originalAssetType variable to detect whether we are changing the value of the referenced asset type from its saved value -->
	<IF COND="IsVariable.ContentDetails:assettypename=true">
	<THEN>
		<SETVAR NAME="originalAssetType" VALUE="Variables.ContentDetails:assettypename"/>
	</THEN>
	</IF>
	<IF COND="IsVariable.ContentDetails:type=true">
	<THEN>
		<SETVAR NAME="originalAttrType" VALUE="Variables.ContentDetails:type"/>
	</THEN>
	</IF>
</THEN>
</IF>

<IF COND="IsVariable.originalAssetType=false">
<THEN>
	<SETVAR NAME="originalAssetType" VALUE="Variables.empty"/>
</THEN>
</IF>
<IF COND="IsVariable.originalAttrType=false">
<THEN>
	<SETVAR NAME="originalAttrType" VALUE="Variables.empty"/>
</THEN>
</IF>

<!-- Preserve originalAssetType for subsequent reposts -->
<STRING.ENCODE VARIABLE="originalAssetType" VARNAME="originalAssetTypeEnc"/>
<INPUT TYPE="hidden" NAME="originalAssetType" VALUE="Variables.originalAssetTypeEnc" REPLACEALL="Variables.originalAssetTypeEnc"/>
<STRING.ENCODE VARIABLE="originalAttrType" VARNAME="originalAttrTypeEnc"/>
<INPUT TYPE="hidden" NAME="originalAttrType" VALUE="Variables.originalAttrTypeEnc" REPLACEALL="Variables.originalAttrTypeEnc"/>

<SCRIPT LANGUAGE="JavaScript">
<![CDATA[

function repostFlexAttributeForm()
{
	repostContentForm();
}

function cancelFlexAttributeForm()
{
	var obj = document.forms[0];

	if(confirm("]]><XLAT.STREAM KEY="dvin/Common/CancelClicked" ESCAPE="true" ENCODE="false"/><![CDATA[")){
		obj.elements['upcommand'].value="cancel";
		obj.submit();
		return false;
	}
}

function submitForm(){
	submitFlexAttributeForm();
}

function submitFlexAttributeForm()
{
	if (checkfields())
	{
		document.forms[0].submit();
	}
	return false;
}

function checkfields()
{
	var obj = document.forms[0];
  	
	if (obj.elements['Attributes:name'].value=="") 
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/Error/AT/Common/UniqueName" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:name'].focus();
		return false;
	}
	var isclean = isCleanString(obj.elements['Attributes:name'].value,'*');
	if (!isclean)
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ApostropheNotAllowedAsterisk" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:name'].focus();
		return false;
	}

	if (obj.elements['Attributes:name'].value.toLowerCase().substring(0,1)==" ") 
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/NoSpecifyNameSpace" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:name'].focus();	 
		return false;
	}
	
	if (obj.elements['Attributes:name'].value.toLowerCase().substring(0,2)=="id") 
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/NoSpecifyId" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:name'].focus();
		return false;
	}

	if (!Checkletter (obj.elements['Attributes:name'].value)) 
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/NoEqualSignName" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:name'].focus();
		return false;
	}

	var selectedValueType;
	if ( obj.elements['Attributes:type'].type=="hidden")
	{
		selectedValueType = obj.elements['Attributes:type'].value;
	}
	else
	{
		alert( "Error in form");
	}

	if ( selectedValueType=="" )
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/PickAnAttributeType" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		obj.elements['Attributes:type'].focus();
		return false;
	}
	if ( selectedValueType=="asset") 
	{
		if ( dijit.byId('Attributes:assettypename') && dijit.byId('Attributes:assettypename').get('value')=="")
		{	
]]>
			alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/SpecifyAssetType" ENCODE="false"  ESCAPE="true"/>");
<![CDATA[
			obj.elements['Attributes:type'].focus();
			return false;	
		}
	}
	
	if ( ! CheckAttributeEditor(selectedValueType) )
	{
		return false;
	}
		
	{
		var aname = obj.elements['Attributes:name'].value;
		var aspace = aname.indexOf(" ");
		if ( aspace != -1 ) 
		{
]]>
			alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/NameNoSpace" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
			obj.elements['Attributes:name'].focus();
			return false;
		}		
	}
    
	var storageType;
	if (dijit.byId('Attributes:storage'))
	{
		storageType = dijit.byId('Attributes:storage').get('value');
		if (storageType=="R")
		{
			if (obj.elements['Attributes:externalid'].value=="") 
			{
]]>
				alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/MustSpecifyExternalIdtableColumn" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
				obj.elements['Attributes:externalid'].focus();
				return false;
			}
			if (obj.elements['Attributes:externaltable'].value=="") 
			{
]]>
				alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/MustSpecifyExternalIdtableColumn" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
				obj.elements['Attributes:externaltable'].focus();
				return false;
			}
			if (obj.elements['Attributes:externalcolumn'].value=="") 
			{
]]>
				alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/MustSpecifyExternalIdtableColumn" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
				obj.elements['Attributes:externalcolumn'].focus();
				return false;
			}
		}
	}
	return true;
}


/**
 *	The method returns a string containing different value type(s) 
 *  supported by a given attribute editor separated by comma. 
 *	It returns null in case a given attribute editor does not exist		
 */

function getAttrMappings(attrEditor)
{
	var attrEditorArray = new Array();
	]]>
	<setvar NAME="queryend" VALUE="ORDER BY lower(name)"/>
	<CALLSQL QRYNAME="OpenMarket/Xcelerate/AssetType/AttrTypes/SelectSummary" LIST="attrEditorList"/>
	<IF COND="attrEditorList.#numRows!=0">
	<THEN>
		<LOOP LIST="attrEditorList">
		<STRINGLIST NAME="suppValType" STR="attrEditorList.valuetype" DELIM=","/>
		 	
			<if COND="suppValType.#numRows!=0">
		 	<then>
		 	<![CDATA[
				attrEditorArray[']]><STRING.STREAM LIST="attrEditorList" COLUMN="name"/><![CDATA['] = []]>
		 		<LOOP LIST="suppValType">
		 			<if COND="suppValType.#numRows!=suppValType.#curRow">
		 			<then>
		 				<![CDATA[']]><STRING.STREAM LIST="suppValType" COLUMN="ITEM"/><![CDATA[',]]>
		 			</then>
					<else>
						<![CDATA[']]><STRING.STREAM LIST="suppValType" COLUMN="ITEM"/><![CDATA[']]>	
					</else>
					</if>
				</LOOP>
				<![CDATA[];
				]]>
			</then>
		  	</if>
		</LOOP>
	</THEN>
	</IF>
	<![CDATA[

	
	return attrEditorArray[attrEditor];
}

/*
 * The method returns true if the input value type is supported by  
 * the attribute editor selected by the user to edit the attribute
 * else it will return false. 
 * 
 * NOTE : It will always return true in case a user selects a new attribute editor 
 *				for which the supported value types is not known. This means, a new attribute 
 *				editor by default will support all the value types until its mapping is specified
 					in the getAttrMappings function  
 *					   
 *  
 */
function CheckAttributeEditor(attrType)
{
	var obj = document.forms[0];
	if(!obj.elements['Attributes:attributetype'])
	return true;
	var attrEditor = dijit.byId('Attributes:attributetype').get('displayedValue');
]]>	
	var message = "<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AttributeEditorNotSupported" ESCAPE="true" ENCODE="false"/>";

<![CDATA[
	var value = getAttrMappings(attrEditor);
	var match = false;
	
	// If the entry of an mapping is not there for a newly created attribute editor
	// then the attribute editor is supposed to take all the possible value types.
	if ( ( value == null ) || ( value.length <= 0 ) )
	{	
		match = true;  	
	}
	else
	{
		for( var i = 0; i < value.length; i++ )
		{
			if( attrType == value[i] )
			{
				match = true;
				break;
			}
		}
	}
	
	if(! match)
	{
		message = message.replace(/valType/, attrType);
		message = message.replace(/attrEditor/, attrEditor);
		alert(message);
		obj.elements['Attributes:attributetype'].focus();
	}
	return match;
}

function CheckChangeType()
{
	var obj = document.forms[0], editFlag;
]]>
	<if COND="IsVariable.EditFlag=true">
	<then>
		editFlag = "<STRING.STREAM VARIABLE="EditFlag" ESCAPE="true" ENCODE="false"/>";
	</then>
	</if>
 <if COND="Variables.ThisPage=EditFront">
	<then>
	 var PageNameIs="Edit";
	</then>
	<else>
	 var PageNameIs="New";
	</else>
</if>
	var ValueName = "<STRING.STREAM VARIABLE="originalAttrType" ESCAPE="true" ENCODE="false"/>";
<![CDATA[
	var doRepost = false;
	if(ValueName != "" && dijit.byId('Attributes:type').get('value')!=ValueName)
	{
]]>
if(PageNameIs=="Edit")
 {
		if(confirm("<XLAT.STREAM KEY="dvin/AT/SVals/StoredDataWillBeDeleted" ESCAPE="true" ENCODE="false"/>"))
<![CDATA[
		{
			// Any change to the asset type should repost
			doRepost = true;
		}
		else
		{
			dijit.byId('Attributes:type').set('value',ValueName);
		}
		}
	else if( PageNameIs == "New" && editFlag && editFlag == "copy"){
		doRepost = true;
	}	
	}
	else
	{
		// Any change to the asset type should repost
		doRepost = true;
	}

	if (doRepost)
		repostFlexAttributeForm();
}

function CheckChangeAsset()
{
	var obj = document.forms[0], editFlag;
]]>	
	<if COND="IsVariable.EditFlag=true">
	<then>
		editFlag = "<STRING.STREAM VARIABLE="EditFlag" ESCAPE="true" ENCODE="false"/>";
	</then>
	</if>
<![CDATA[	
	if(obj.elements['Attributes:type'].value!="asset")
	{
]]>
		alert("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/OnlySpecified" ESCAPE="true" ENCODE="false"/>");
<![CDATA[

	}
	else
	{
]]>
<if COND="Variables.ThisPage=EditFront">
    	<then>
    	 var PageNameIs="Edit";
    	</then>
    	<else>
    	 var PageNameIs="New";
    	</else>
    </if>
		var AssetName = "<STRING.STREAM VARIABLE="originalAssetType" ESCAPE="true" ENCODE="false"/>";
<![CDATA[
    
		if(AssetName!="" && dijit.byId('Attributes:assettypename').get('value')!=AssetName)
		{
]]>     
			if(PageNameIs=="Edit")
 {

			if(confirm("<XLAT.STREAM KEY="dvin/AT/SVals/StoredDataWillBeDeleted" ESCAPE="true" ENCODE="false"/>"))
<![CDATA[
			{
				// Any change to the asset type should repost
				repostFlexAttributeForm();
			}
			else
			{
				dijit.byId('Attributes:assettypename').set('value',AssetName);
			}
			}
			else if( PageNameIs == "New" && editFlag && editFlag == "copy"){
				repostFlexAttributeForm();
			}
		}
		else
		{
			// Any change to the asset type should repost
			repostFlexAttributeForm();
		}
	}
}

function checkStorageType(origStorageType)
{
	var obj = document.forms[0];
	var storageType = dijit.byId('Attributes:storage').get('value');
	if(storageType=="L")
	{
]]>
		var conf = confirm("<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ConfirmExternalToLocal" ESCAPE="true" ENCODE="false"/>");
<![CDATA[
		if( !conf )
		{   //undo the change, and get back to original storage type
			dijit.byId('Attributes:storage').set('value',"R");
		}

	}
}

function Checkletter (StrVar)
{
	for(i=StrVar.length-1; i>=0; i--)
	{
		if(StrVar.charAt(i)=="=")
		{
			return false;
		}
 	}
	return true;
}

function setCurrImage(obj)
{
	obj.form.elements.currImage.value = obj.name;
}

function setCurrLinkset(obj)
{
	obj.form.elements.currLinkset.value = obj.name;
}

function xfer(src,target,defpubid)
{
	var sc, itemText, i, newIndex, listy;

	for (i=0; i<src.options.length; i++)
	{
		if (src.options[i].selected)
		{
			var sc=i;
			var o=src.options[sc]
			items=new Option(o.text,o.value);
			newIndex=target.options.length;
			target.options[newIndex]=items;
			target.options[newIndex].selected=true;
		}
	}
	i = 0;
	while (i<src.options.length)
	{
		if (src.options[i].selected)
			src.options[i]=null;
		else
			i = i + 1;
	}
	delNul(src)
	delNul(target)
}

function delNul(lst)
{
	i = 0;
	while (i<lst.options.length)
	{
		if (lst.options[i].value==-1)
			lst.options[i]=null
		else
			i = i + 1;
	}
}

function selAll(lst)
{
	if (!lst) return;
	for (i=0; i<lst.options.length; i++)
		lst.options[i].selected=true ;
	delNul(lst);
}

function checkEmbeddedLinks()
{
	repostFlexAttributeForm();
}
]]>
	
</SCRIPT>
<callelement NAME="OpenMarket/Gator/Scripts/SetDirtyState"/>

<!-- edits of storage fields are not allowed when property mwb.conservativedependencies is set to false
	and the attribute is referenced -->
<SETVAR NAME="canEditStorageFields" VALUE="true"/>
<IF COND="Variables.updatetype=editfront">
<THEN>
	<IF COND="Variables.ContentDetails:storage!=R">
	<THEN>
		<ATM.LOCATE TYPE="Variables.AssetType"  VARNAME="attributemgr"/>
		<ATTRIBUTES.ISUSED NAME="attributemgr" VARNAME="isUsed" ID="Variables.id"/>
	</THEN>
	<ELSE>
		<!-- if it is an external attribute, we cannot know whether it is used, so assume yes -->
		<SETVAR NAME="isUsed" VALUE="true"/>
	</ELSE>
	</IF>
	<IF COND="Variables.isUsed=true">
	<THEN>
		<PROPERTY.GET PARAM="mwb.conservativedependencies" INIFILE="gator.ini" VARNAME="canEditStorageFields"/>
	</THEN>
	</IF>
</THEN>
</IF>
<INPUT TYPE="hidden" NAME="upcommand" VALUE="submit"/>
<!-- form buttons -->
<CALLELEMENT NAME="OpenMarket/Xcelerate/UIFramework/Util/ToolBar">
	<ARGUMENT NAME="cancelScript" VALUE="cancelFlexAttributeForm"/>
	<ARGUMENT NAME="submitScript" VALUE="submitFlexAttributeForm"/>
	<ARGUMENT NAME="doNotShowSaveButton" VALUE="false"/>
</CALLELEMENT>
<div dojoType="dijit.layout.ContentPane" region="center">
<table border="0" cellpadding="0" cellspacing="0" class="width70BottomExMargin">
	<!-- page title w/ asset name -->
	<assettype.list LIST="ThisAsset" FIELD1="assettype" VALUE1="Variables.AssetType"/>
	<tr>
		<td><span class="title-text"><STRING.STREAM VALUE="ThisAsset.description"/>: </span><span class="title-value-text"><STRING.STREAM VARIABLE="ContentDetails:name"/></span></td>
	</tr>
	<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/TitleBar">
		<argument NAME="SpaceBelow" VALUE="No"/>
	</callelement>

    <!-- attribute inspection form -->
	<tr>
		<td>
			<table border="0" cellpadding="0" cellspacing="0">
				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				<tr>
					<td class="form-label-text"><span class="alert-color">*</span><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Name"/></td>
					<td><img height="1" width="5" src="Variables.cs_imagedir/graphics/common/screen/dotclear.gif" REPLACEALL="Variables.cs_imagedir"/></td>
					<td class="form-inset">
						<PROPERTY.GET PARAM="xcelerate.asset.sizeofnamefield" INIFILE="futuretense_xcel.ini" VARNAME="sizeofnamefield"/>
						<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
							<argument NAME="inputName" VALUE="Attributes:name"/>
							<argument NAME="inputValue" VALUE="Variables.ContentDetails:name"/>
							<argument NAME="inputSize" VALUE='32'/>
							<argument NAME="inputMaxlength" VALUE="Variables.sizeofnamefield"/>
						</callelement>
					</td>
				</tr>
            
				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				
				<tr>
					<td valign="top" class="form-label-text"><span class="alert-color"></span><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Description"/></td>
					<td></td>
					<td class="form-inset">
						<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
							<argument NAME="inputName" VALUE="Attributes:description"/>
							<argument NAME="inputValue" VALUE="Variables.ContentDetails:description"/>
							<argument NAME="inputSize" VALUE='32'/>
							<argument NAME="inputMaxlength" VALUE='128'/>
						</callelement>
					</td>
				</tr>

				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				<tr>
					<td class="form-label-text"><span class="alert-color">*</span><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AttributeType"/></td>
					<td></td>
					<td class="form-inset"> 
						<if COND="Variables.canEditStorageFields=true">
						<then>
							<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/ValidTypes"/>
						</then>
						<else>
							<string.stream VARIABLE="ContentDetails:type"/>
							<STRING.ENCODE VARIABLE="ContentDetails:type" VARNAME="ContentDetails:typeenc"/>
							<input TYPE="hidden" NAME="Attributes:type" VALUE="Variables.ContentDetails:typeenc" REPLACEALL="Variables.ContentDetails:typeenc"/>
						</else>
						</if>
					</td>
				</tr>
	
				
				<if COND="Variables.ContentDetails:type=asset">
				<then>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<tr>
						<td class="form-label-text"><span class="alert-color">*</span><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AssetType"/><br/></td>
						<td></td>
						<td class="form-inset">
							<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/GetAssetTypes">
								<argument NAME="FieldName" VALUE="Attributes:assettypename"/>
								<argument NAME="CurrentName" VALUE="Variables.ContentDetails:assettypename"/>
							</callelement>
						</td>
					</tr>
				</then>
				</if>
				
				<setvar NAME="assettypeisset" VALUE="false"/>
				<if COND="IsVariable.ContentDetails:assettypename=true">
				<then>
					<if COND="Variables.ContentDetails:assettypename!=Variables.empty">
					<then>
						<setvar NAME="assettypeisset" VALUE="true"/>
					</then>
					</if>
				</then>
				</if>
				
				<if COND="Variables.assettypeisset=true">
				<then>
				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				<tr>
					<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AssetSubTypes"/><br/></td>
					<td></td>
					<td class="form-inset">
					<!-- We have an asset type, so present the subtypes available now -->
					<!-- First, build a hash of the existing set subtype values -->
					<HASH.CREATE NAME="myhash"/>
					<if COND="IsVariable.ContentDetails:assetsubtypename:Total=true">
					<then>
						<if COND="Variables.ContentDetails:assetsubtypename:Total!=Variables.empty">
						<then>
							<if COND="Variables.ContentDetails:assetsubtypename:Total!=0">
							<then>
								<setcounter NAME="subtypecounter" VALUE="0"/>
								<loop COUNT="Variables.ContentDetails:assetsubtypename:Total">
									<setvar NAME="subtype" VALUE="Variables.ContentDetails:assetsubtypename:Counters.subtypecounter"/>
									<HASH.ADD NAME="myhash" VALUE="Variables.subtype"/>
									<inccounter NAME="subtypecounter" VALUE="1"/>
								</loop>
							</then>
							</if>
						</then>
						</if>
					</then>
					</if>
					<!-- Now, present an appropriate multiselect box -->
					<ASSET.GETLEGALSUBTYPES TYPE="Variables.ContentDetails:assettypename" LIST="subtypelist" PUBID="SessionVariables.pubid"/>
					<SELECT NAME="AttrAssetSubtypes" SIZE="5" MULTIPLE="true" STYLE="width:185px;">
						<if COND="Variables.ContentDetails:assetsubtypename:Total=0">
						<then>
							<OPTION VALUE="" SELECTED="true"><XLAT.STREAM KEY="dvin/Common/Any"/></OPTION>
						</then>
						<else>
							<OPTION VALUE=""><XLAT.STREAM KEY="dvin/Common/Any"/></OPTION>
						</else>
						</if>
						<if COND="IsList.subtypelist=true">
						<then>
							<if COND="subtypelist.#numRows!=0">
							<then>
								<loop LIST="subtypelist">
									<HASH.CONTAINS NAME="myhash" VALUE="subtypelist.subtype" VARNAME="yesno"/>
									<if COND="Variables.yesno=true">
									<then>
										<OPTION VALUE="subtypelist.subtype" REPLACEALL="subtypelist.subtype" SELECTED="true"><STRING.STREAM LIST="subtypelist" COLUMN="subtype"/></OPTION>
									</then>
									<else>
										<OPTION VALUE="subtypelist.subtype" REPLACEALL="subtypelist.subtype"><STRING.STREAM LIST="subtypelist" COLUMN="subtype"/></OPTION>
									</else>
									</if>
								</loop>
							</then>
							</if>
						</then>
						</if>
					</SELECT>
					</td>
				</tr>
				</then>
				</if>


				<ASSET.GETASSETTYPE NAME="Variables.assetname" OUTNAME="at"/>
				<ASSETTYPE.GET NAME="at" FIELD="description" OUTPUT="at:description"/>
				<SETVAR NAME="atdescription"  VALUE="Variables.at:description"/>

				<if COND="Variables.ContentDetails:type=asset">
				<then>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/UI/Admin/DependencyType"/>: <br/><span class="small-text"></span>
						</td>
						<td></td>
						<td class="form-inset">
							<IF COND="Variables.ContentDetails:deptype=V">
							<THEN>
								<INPUT TYPE="RADIO" ONCLICK="setTabDirty()" NAME="Attributes:deptype" VALUE="E"/><A HREF="#" onClick="forms[0].elements['Attributes:deptype'][0].checked=true;return false;" style="text-decoration : none; color : #000000"  onMouseOver="window.status='';return true;"><XLAT.STREAM KEY="dvin/UI/Admin/Existsapprovedversionassetacceptablepub"/></A>.<br/>
								<INPUT TYPE="RADIO" ONCLICK="setTabDirty()" NAME="Attributes:deptype" VALUE="V" CHECKED="true"/><A HREF="#" onClick="forms[0].elements['Attributes:deptype'][1].checked=true;return false;" style="text-decoration : none; color : #000000" onMouseOver="window.status='';return true;"><XLAT.STREAM KEY="dvin/UI/Admin/Exactversionchangenecessitateapprovalpub"/></A><br/>
							</THEN>
							<ELSE>
								<INPUT TYPE="RADIO" ONCLICK="setTabDirty()" NAME="Attributes:deptype" VALUE="E"  CHECKED="true"/><A HREF="#" onClick="forms[0].elements['Attributes:deptype'][0].checked=true;return false;" style="text-decoration : none; color : #000000"   onMouseOver="window.status='';return true;"><XLAT.STREAM KEY="dvin/UI/Admin/Existsapprovedversionassetacceptablepub"/></A><br/>
								<INPUT TYPE="RADIO" ONCLICK="setTabDirty()" NAME="Attributes:deptype" VALUE="V"/><A HREF="#" onClick="forms[0].elements['Attributes:deptype'][1].checked=true;return false;" style="text-decoration : none; color : #000000" onMouseOver="window.status='';return true;"><XLAT.STREAM KEY="dvin/UI/Admin/Exactversionchangenecessitateapprovalpub"/></A> <br/>
							</ELSE>
							</IF>
						</td>
					</tr>
				</then>
				</if>
				
				<if COND="Variables.ContentDetails:type=url">
				<then>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Folder"/><br/><span class="small-text"></span></td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=false">
							 	<then>
									<STRING.STREAM VARIABLE="ContentDetails:upload"/>
									<![CDATA[<input TYPE="HIDDEN" NAME="Attributes:upload" SIZE="32" MAXLENGTH="128" VALUE="]]><STRING.STREAM VARIABLE="ContentDetails:upload"/><![CDATA["/>]]>									
								</then>
								<else>
									<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
										<argument NAME="inputName" VALUE="Attributes:upload"/>
										<argument NAME="inputValue" VALUE="Variables.ContentDetails:upload"/>
										<argument NAME="inputSize" VALUE='32'/>
										<argument NAME="inputMaxlength" VALUE="128"/>
									</callelement>
								</else>
							</if>
						</td>
					</tr>
				</then>
				</if>

				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				
				<tr>
					<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/NumberofValues"/></td>
					<td></td>
					<td class="form-inset"><callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/ValueStyle"/></td>
				</tr>
						
				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				
				<tr>
					<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AttrEditor"/> </td>
					<td></td>
					<td class="form-inset"><callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/GetAttrTypes"/></td>
				</tr>            
            
                <callelement NAME="OpenMarket/Gator/FlexibleAssets/Common/GetTagNameByAttributeEditorId">
					<argument NAME="AttrEditorId" VALUE="Variables.ContentDetails:attributetype"/>
				</callelement>
				
				<SETVAR NAME="errno" VALUE="0"/>
            	<ISINLIST ITEM="Variables.ContentDetails:type" STR="blob,text,url" />
          	  	<if COND="Variables.errno=1">
				<then>
					<SETVAR NAME="errno" VALUE="0"/>
	            	<ISINLIST ITEM="Variables.AttrEditorName" STR="CKEDITOR,TEXTAREA" />
	            	<REMOVEVAR NAME="Variables.AttrEditorName"/>
				</then>
				</if>
				
          	  	<if COND="Variables.errno=1">
				<then>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/AllowEmbeddedLinks"/></td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.ContentDetails:embedtype=H" >
							<then>
								<INPUT TYPE="radio" ONCLICK="setTabDirty()" NAME="Attributes:embedtype" VALUE="H" CHECKED="true" /><XLAT.STREAM KEY="dvin/Common/Yes"/>&nbsp;&nbsp;&nbsp;
								<INPUT TYPE="radio" ONCLICK="setTabDirty()" NAME="Attributes:embedtype" VALUE="U" /><XLAT.STREAM KEY="dvin/Common/No"/>
							</then>
							<else>
								<INPUT TYPE="radio" ONCLICK="setTabDirty()" NAME="Attributes:embedtype" VALUE="H" /><XLAT.STREAM KEY="dvin/Common/Yes"/>&nbsp;&nbsp;&nbsp;
								<INPUT TYPE="radio" ONCLICK="setTabDirty()" NAME="Attributes:embedtype" VALUE="U" CHECKED="true" /><XLAT.STREAM KEY="dvin/Common/No"/>
							</else>
							</if>
						</td>
					</tr>
					<SETVAR NAME="errno" VALUE="0"/>
				</then>
				</if>
				
				<PROPERTY.GET PARAM="mwb.externalattributes" INIFILE="gator.ini" VARNAME="canDefineExternalAttributes"/>
				<IF COND="Variables.canDefineExternalAttributes=true">
				<THEN>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/EditingStyle"/> </td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=true">
							<then>
								<select NAME="Attributes:editing" size="1" dojoType="fw.dijit.UISimpleSelect">
									<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/LocalRemote">
										<argument NAME="lrcurrentvalue" VALUE="Variables.ContentDetails:editing"/>
									</callelement>
								</select>
							</then>
							<else>
								<if COND="Variables.ContentDetails:editing=L">
								<then>
									<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/local"/>
								</then>
								</if>
								<if COND="Variables.ContentDetails:editing=R">
								<then>
									<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/external"/>
								</then>
								</if>
								<input TYPE="hidden" NAME="Attributes:editing" VALUE="Variables.ContentDetails:editing" REPLACEALL="Variables.ContentDetails:editing"/>
							</else>
							</if>
						</td>
					</tr>
	
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/StorageStyle"/> </td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=true">
							<then>
								<select NAME="Attributes:storage" ID="Attributes:storage" dojoType="fw.dijit.UISimpleSelect" size="1" onchange="checkStorageType('Variables.ContentDetails:storage')" REPLACEALL="Variables.ContentDetails:storage">
									<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/LocalRemote">
										<argument NAME="lrcurrentvalue" VALUE="Variables.ContentDetails:storage"/>
									</callelement>
								</select>
							</then>
							<else>
								<if COND="Variables.ContentDetails:storage=L">
								<then>
									<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/local"/>
								</then>
								</if>
								<if COND="Variables.ContentDetails:storage=R">
								<then>
									<XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/external"/>
								</then>
								</if>
								<input TYPE="hidden" NAME="Attributes:storage" VALUE="Variables.ContentDetails:storage" REPLACEALL="Variables.ContentDetails:storage"/>
							</else>
							</if>
						</td>
					</tr>
	
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ExternalID"/></td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=true">
							<then>
								<replace STR="Variables.ContentDetails:externalid">									
									<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
										<argument NAME="inputName" VALUE="Attributes:externalid"/>
										<argument NAME="inputValue" VALUE="Variables.ContentDetails:externalid"/>
										<argument NAME="inputSize" VALUE='32'/>
										<argument NAME="inputMaxlength" VALUE="20"/>
									</callelement>
								</replace>
							</then>
							<else>
								<STRING.STREAM VARIABLE="ContentDetails:externalid"/>
								<STRING.ENCODE VARIABLE="ContentDetails:externalid" VARNAME="ContentDetails:externalidenc"/>
								<input TYPE="hidden" NAME="Attributes:externalid" VALUE="Variables.ContentDetails:externalidenc" REPLACEALL="Variables.ContentDetails:externalidenc"/>
							</else>
							</if>
						</td>
					</tr>
					
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ExternalTable"/> </td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=true">
							<then>
								<replace STR="Variables.ContentDetails:externaltable">									
									<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
										<argument NAME="inputName" VALUE="Attributes:externaltable"/>
										<argument NAME="inputValue" VALUE="Variables.ContentDetails:externaltable"/>
										<argument NAME="inputSize" VALUE='32'/>
										<argument NAME="inputMaxlength" VALUE="32"/>
									</callelement>
								</replace>
							</then>
							<else>
								<STRING.STREAM VARIABLE="ContentDetails:externaltable"/>
								<STRING.ENCODE VARIABLE="ContentDetails:externaltable" VARNAME="ContentDetails:externaltableenc"/>
								<input TYPE="hidden" NAME="Attributes:externaltable" VALUE="Variables.ContentDetails:externaltableenc" REPLACEALL="Variables.ContentDetails:externaltableenc"/>
							</else>
							</if>
						</td>
					</tr>
	
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					
					<tr>
						<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ExternalColumn"/> </td>
						<td></td>
						<td class="form-inset">
							<if COND="Variables.canEditStorageFields=true">
							<then>
								<replace STR="Variables.ContentDetails:externalcolumn">									
									<callelement NAME="OpenMarket/Gator/AttributeTypes/TextBox">
										<argument NAME="inputName" VALUE="Attributes:externalcolumn"/>
										<argument NAME="inputValue" VALUE="Variables.ContentDetails:externalcolumn"/>
										<argument NAME="inputSize" VALUE='32'/>
										<argument NAME="inputMaxlength" VALUE="32"/>
									</callelement>
								</replace>
							</then>
							<else>
								<STRING.STREAM VARIABLE="ContentDetails:externalcolumn"/>
								<STRING.ENCODE VARIABLE="ContentDetails:externalcolumn" VARNAME="ContentDetails:externalcolumnenc"/>
								<input TYPE="hidden" NAME="Attributes:externalcolumn" VALUE="Variables.ContentDetails:externalcolumnenc" REPLACEALL="Variables.ContentDetails:externalcolumnenc"/>
							</else>
							</if>
						</td>
					</tr>
				</THEN>
				<ELSE>
					<!-- property dictates we can not display external option, so set storage and editing to local -->
					<input TYPE="hidden" NAME="Attributes:storage" VALUE="L"/>
					<input TYPE="hidden" NAME="Attributes:editing" VALUE="L"/>
				</ELSE>
				</IF>

				<!-- Diff not yet implemented -sjc
				<tr>
					<td class="form-label-text">Comparator Engine:</td>
					<td></td>
					<td>
						<CALLELEMENT NAME="OpenMarket/Gator/FlexibleAssets/Attributes/ShowTransformEngines">
							<ARGUMENT NAME="currentType" VALUE="text/plain"/>
							<ARGUMENT NAME="currentSelection" VALUE="Variables.ContentDetails:searchconv"/>
							<ARGUMENT NAME="inputName" VALUE="Attributes:searchconv"/>
						</CALLELEMENT>
					</td>
				</tr>

				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/
				<tr>
					<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/ConversionEnginetoHTML"/>:</td>
					<td></td>
					<td>
						<CALLELEMENT NAME="OpenMarket/Gator/FlexibleAssets/Attributes/ShowTransformEngines">
							<ARGUMENT NAME="currentType" VALUE="text/html"/>
							<ARGUMENT NAME="currentSelection" VALUE="Variables.ContentDetails:diffconv"/>
							<ARGUMENT NAME="inputName" VALUE="Attributes:diffconv"/>
						</CALLELEMENT>
					</td>
				</tr>

				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				<tr>
					<td class="form-label-text"><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/DiffPresentation"/>:</td>
					<td></td>
					<td>
						<IF COND="Variables.ContentDetails:diffpres=Variables.empty">
						<THEN>
							<INPUT TYPE="RADIO" CHECKED="yes" NAME="Attributes:diffpres" VALUE="Variables.empty" REPLACEALL="Variables.empty"/><XLAT.STREAM KEY="dvin/Common/None"/>
						</THEN>
						<ELSE>
							<INPUT TYPE="RADIO" NAME="Attributes:diffpres" VALUE="Variables.empty" REPLACEALL="Variables.empty"/><XLAT.STREAM KEY="dvin/Common/None"/>
						</ELSE>
						</IF>
						<IF COND="Variables.ContentDetails:diffpres=I">
						<THEN>
							<INPUT TYPE="RADIO" CHECKED="yes" NAME="Attributes:diffpres" VALUE="I"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Inline"/>
						</THEN>
						<ELSE>
							<INPUT TYPE="RADIO" NAME="Attributes:diffpres" VALUE="I"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Inline"/>
						</ELSE>
						</IF>
						<IF COND="Variables.ContentDetails:diffpres=S">
						<THEN>
							<INPUT TYPE="RADIO" CHECKED="yes" NAME="Attributes:diffpres" VALUE="S"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Summary"/>
						</THEN>
						<ELSE>
							<INPUT TYPE="RADIO" NAME="Attributes:diffpres" VALUE="S"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Summary"/>
						</ELSE>
						</IF>
						<IF COND="Variables.ContentDetails:diffpres=W">
						<THEN>
							<INPUT TYPE="RADIO" CHECKED="yes" NAME="Attributes:diffpres" VALUE="W"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Window"/>
						</THEN>
						<ELSE>
							<INPUT TYPE="RADIO" NAME="Attributes:diffpres" VALUE="W"/><XLAT.STREAM KEY="dvin/FlexibleAssets/Attributes/Window"/>
						</ELSE>
						</IF>
					</td>
				</tr>-->
			
				<!-- named associations if there are any -->		 
				<ASSOCNAMEDMANAGER.LIST  LISTVARNAME="associations" TYPE="Variables.AssetType"/>
				<IF COND="associations.#numRows!=0">
				<THEN>
					<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
					<CALLELEMENT NAME="OpenMarket/Xcelerate/Actions/AssetMgt/AssetChildrenFormTypeAhead"/>
				</THEN>
				</IF>

				<!--  OMIma26860 -->
				<!--Take out now for 3.6 - sharing handled another way
				<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/RowSpacer"/>
				<callelement NAME="OpenMarket/Gator/FlexibleAssets/Common/ShowSites"/>
				-->
				<!--  OMIma26860 -->
			
				<!-- Skip Until we have a real case
				<callelement NAME="OpenMarket/Gator/FlexibleAssets/Attributes/GetArguments"/>
				-->
			</table>
		</td>
	</tr>

	<callelement NAME="OpenMarket/Xcelerate/UIFramework/Util/FooterBar"/>
</table>
</div>
</div>
</FTCS>

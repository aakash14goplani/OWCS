<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">
<FTCS Version="1.1">
<!-- OpenMarket/Gator/Rules/GenerateSegmentLeafCondition
--
-- INPUT
--
--
--
-- OUTPUT
--
-->

<!-- This element adds a leaf condition to a ruleset -->
<!-- Called by: GenerateSegmentRules -->
<!-- Variables coming in are presumed to be: leafhint, ruleobject, rulesetobject, segid -->
<NVOBJECT.CREATE NAME="leafhintobject"/>
<NVOBJECT.FROMSTRING NAME="leafhintobject" VALUE="Variables.leafhint"/>

<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="RULETYPE"
	VARNAME="leaftype"/>
<IF COND="IsVariable.leaftype=true">
<THEN>

	<IF COND="Variables.leaftype=history">
	<THEN>
		<SUBSTRING.CREATE NAME="mysubstring"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VARNAME"
			VARNAME="scalarname"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VARASSETID"
			VARNAME="varassetid"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="COMPAREOP"
			VARNAME="compareop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VALUE"
			VARNAME="value"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HIGHVALUE"
			VARNAME="highvalue"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HOP"
			VARNAME="hop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HFIELD"
			VARNAME="hfield"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HDATEOP"
			VARNAME="hdateop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HSTARTDATE"
			VARNAME="hstartdate"/>
      		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HNUMCONSTR"
			VARNAME="hnumconstr"/>

		<IF COND="IsVariable.varassetid=true">
		<THEN>
			<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject"
				TYPE="HistoryVals" ID="Variables.varassetid"/>
		</THEN>
		</IF>

		<!-- Construct the end date, if any -->
		<IF COND="Variables.hdateop=none">
		<THEN>
			<SETVAR NAME="hstartdate" VALUE='Util.parseLong("0")'/>
			<SETVAR NAME="henddate" VALUE="Long.MAX_VALUE"/>
		</THEN>
		</IF>
		<IF COND="Variables.hdateop=fixed">
		<THEN>
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HSTARTDATE"
				VARNAME="hstartdate"/>
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HENDDATE"
				VARNAME="henddate"/>

			<!-- If there's no end date, use a big number -->
			<IF COND="IsVariable.henddate=false">
			<THEN>
				<SETVAR NAME="henddate" VALUE="Long.MAX_VALUE"/>
			</THEN>
			<ELSE>
				<SETVAR NAME="henddate" VALUE='Util.parseLong("Variables.henddate")'/>
			</ELSE>
			</IF>
			<IF COND="IsVariable.hstartdate=false">
			<THEN>
				<SETVAR NAME="hstartdate" VALUE='Util.parseLong("0")'/>
			</THEN>
			<ELSE>
				<SETVAR NAME="hstartdate" VALUE='Util.parseLong("Variables.hstartdate")'/>
			</ELSE>
			</IF>
		</THEN>
		</IF>

		<IF COND="Variables.hdateop=relative">
		<THEN>
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HRELTYPE"
				VARNAME="hreltype"/>
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HINTERVAL"
				VARNAME="hinterval"/>

			<SETVAR NAME="henddate" VALUE="Long.MAX_VALUE"/>

			<IF COND="Variables.hreltype=hours">
			<THEN>
				<CALCULATOR.GO VALUE="Variables.hinterval 60 * 60 * 1000 *"
					VARNAME="hback"/>
			</THEN>
			</IF>
			<IF COND="Variables.hreltype=days">
			<THEN>
				<CALCULATOR.GO VALUE="Variables.hinterval 24 * 60 * 60 * 1000 *"
					VARNAME="hback"/>
			</THEN>
			</IF>
			<IF COND="Variables.hreltype=weeks">
			<THEN>
				<CALCULATOR.GO VALUE="Variables.hinterval 7 * 24 * 60 * 60 * 1000 *"
					VARNAME="hback"/>
			</THEN>
			</IF>
			<IF COND="Variables.hreltype=months">
			<THEN>
				<CALCULATOR.GO VALUE="Variables.hinterval 30 * 24 * 60 * 60 * 1000 *"
					VARNAME="hback"/>
			</THEN>
			</IF>
			<IF COND="Variables.hreltype=years">
			<THEN>
				<CALCULATOR.GO VALUE="Variables.hinterval 365 * 24 * 60 * 60 * 1000 *"
					VARNAME="hback"/>
			</THEN>
			</IF>

			<SETVAR NAME="hstartdate" VALUE='(y.getDate().getTime()-Util.parseLong("Variables.hback"))'/>

		</THEN>
		</IF>

		<!-- Set up everything around the variable part -->
		<IF COND="Variables.hop=count">
		<THEN>
			<SETVAR NAME="mylhsbeg"
			    VALUE='vd.getCountOfHistoryAttribute("Variables.scalarname",'/>
			<SETVAR NAME="mylhsend"
			    VALUE=',Variables.hstartdate,Variables.henddate)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseInt("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseInt("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.hop=first">
		<THEN>
			<SETVAR NAME="mylhsbeg"
			    VALUE='vd.getOldestHistoryTimestamp("Variables.scalarname",'/>
			<SETVAR NAME="mylhsend"
			    VALUE=',Variables.hstartdate,Variables.henddate)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseLong("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseLong("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.hop=last">
		<THEN>
			<SETVAR NAME="mylhsbeg"
			    VALUE='vd.getNewestHistoryTimestamp("Variables.scalarname",'/>
			<SETVAR NAME="mylhsend"
			    VALUE=',Variables.hstartdate,Variables.henddate)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseLong("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseLong("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.hop=sum">
		<THEN>
			<SETVAR NAME="mylhsbeg"
			    VALUE='vd.getSumForTimePeriodOfHistoryAttribute("Variables.scalarname","Variables.hfield",'/>
			<SETVAR NAME="mylhsend"
			    VALUE=',Variables.hstartdate,Variables.henddate).doubleValue()'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseDouble("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseDouble("Variables.highvalue")'/>
		</THEN>
		</IF>


		<!-- Do the comparison code first -->
		<CALLELEMENT NAME="OpenMarket/Gator/Rules/GenerateSegLeafOperation">
			<ARGUMENT NAME="substring" VALUE="mysubstring"/>
			<ARGUMENT NAME="operation" VALUE="Variables.compareop"/>
			<ARGUMENT NAME="lowrhs" VALUE="Variables.mylowrhs"/>
			<ARGUMENT NAME="highrhs" VALUE="Variables.myhighrhs"/>
			<ARGUMENT NAME="remainder" VALUE="Variables.empty"/>
		</CALLELEMENT>

		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.mylhsbeg"/>
		<SETVAR NAME="remainder" VALUE="Variables.mylhsendVariables.remainder"/>

		<!-- Now generate field restriction code -->
		<!-- If there is no field restriction code, use 'null' instead -->
		<IF COND="Variables.hnumconstr=0">
		<THEN>
			<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="null"/>
		</THEN>
		<ELSE>
		    <SUBSTRING.ADDSTRING NAME="mysubstring"
			    VALUE='vd.createHistoryAttributeCriteria("Variables.scalarname",'/>
		    <SETVAR NAME="remainder" VALUE=')Variables.remainder'/>

		    <!-- Walk through the list once, to generate the Util.catlist code -->
		    <IF COND="Variables.hnumconstr!=0">
		    <THEN>
		      <SETCOUNTER NAME="fieldcounter" VALUE="1"/>
		      <LOOP UNTIL="Counters.fieldcounter=Variables.hnumconstr">
			<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE='Util.catList('/>
			<INCCOUNTER NAME="fieldcounter" VALUE="1"/>
		      </LOOP>
		    </THEN>
		    </IF>

		    <!-- Restriction will be a list with 'field' and 'value' columns -->
		    <!-- First, loop through the field restrictions -->
		    <SETCOUNTER NAME="fieldcounter" VALUE="0"/>
		    <LOOP UNTIL="Counters.fieldcounter=Variables.hnumconstr">
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRFIELDCounters.fieldcounter"
				VARNAME="thisconstrfield"/>
			<!-- Grab all the rest of the fields -->
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRTYPECounters.fieldcounter"
				VARNAME="thisconstrtype"/>

			<IF COND="Counters.fieldcounter!=0">
			<THEN>
				<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
			</THEN>
			</IF>

			<!-- Do something different based on the query type -->
			<IF COND="Variables.thisconstrtype=asset">
			<THEN>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRASSETTYPECounters.fieldcounter"
					VARNAME="thisassettype"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRASSETTYPEKEYCounters.fieldcounter"
					VARNAME="thisassettypekey"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HNUMCONSTRVALUECounters.fieldcounter"
					VARNAME="hnumconstrvalue"/>
				<!-- Generate the field/value pairs and build a list (stringvar: newlist) -->
				<!-- Build a comma-separated list of values -->
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='Util.addColumn(Util.mapColumn(z.getLeafAssets(Util.makeTypedQueryList("assettype",Util.makeList("assetid","'/>
				<SETCOUNTER NAME="valuecounter" VALUE="0"/>
				<LOOP UNTIL="Counters.valuecounter=Variables.hnumconstrvalue">
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRVALUECounters.fieldcounter-Counters.valuecounter"
						VARNAME="thisvalue"/>
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRKEYCounters.fieldcounter-Counters.valuecounter"
						VARNAME="thiskey"/>
					<IF COND="IsVariable.thiskey=true">
					<THEN>
						<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="$(Variables.thiskey?x:)" ID="$(Variables.thiskey?:x)"/>
					</THEN>
					<ELSE>
						<IF COND="IsVariable.thisassettypekey=true">
						<THEN>
							<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="$(Variables.thisassettypekey)" ID="Variables.thisvalue"/>
						</THEN>
						<ELSE>
							<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="Variables.thisassettype" ID="Variables.thisvalue"/>
						</ELSE>
						</IF>
					</ELSE>
					</IF>
					<IF COND="Counters.valuecounter!=0">
					<THEN>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					</THEN>
					</IF>
					<IF COND="IsVariable.thiskey=true">
					<THEN>
						<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thiskey?:x"/>
					</THEN>
					<ELSE>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisvalue"/>
					</ELSE>
					</IF>
					<INCCOUNTER NAME="valuecounter" VALUE="1"/>
				</LOOP>
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='")),Util.makeList("assettype","'/>
				<IF COND="IsVariable.thisassettypekey=true">
				<THEN>
					<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thisassettypekey"/>
				</THEN>
				<ELSE>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisassettype"/>
				</ELSE>
				</IF>
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='")),"assetid","value"),"field","Variables.thisconstrfield")'/>

			</THEN>
			</IF>

			<IF COND="Variables.thisconstrtype=assetattr">
			<THEN>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRATTRCounters.fieldcounter"
					VARNAME="thisattr"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRATTRTYPECounters.fieldcounter"
					VARNAME="thisattrtype"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRATTRKEYCounters.fieldcounter"
					VARNAME="thisattrkey"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HNUMCONSTRVALUECounters.fieldcounter"
					VARNAME="hnumconstrvalue"/>
				<!-- Find the attribute type -->
				<!-- Build a comma-separated list of attrtype,attrid values -->
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='Util.addColumn(z.getAttributeValues(z.getLeafAssets(Util.makeTypedQueryList("assettype",Util.makeList("assettype,assetid","'/>
				<SETVAR NAME="valuestring" VALUE="Variables.empty"/>
				<SETCOUNTER NAME="valuecounter" VALUE="0"/>
				<LOOP UNTIL="Counters.valuecounter=Variables.hnumconstrvalue">
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRVALUECounters.fieldcounter-Counters.valuecounter"
						VARNAME="thisvalue"/>
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRATYPECounters.fieldcounter-Counters.valuecounter"
						VARNAME="thisatype"/>
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRKEYCounters.fieldcounter-Counters.valuecounter"
						VARNAME="thiskey"/>
					<IF COND="Counters.valuecounter!=0">
					<THEN>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					</THEN>
					</IF>
					<IF COND="IsVariable.thiskey=true">
					<THEN>
						<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thiskey?x:"/>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
						<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thiskey?:x"/>
					</THEN>
					<ELSE>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisatype"/>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisvalue"/>
					</ELSE>
					</IF>
					<INCCOUNTER NAME="valuecounter" VALUE="1"/>
				</LOOP>
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='")),null),"'/>
				<IF COND="IsVariable.thisattrkey=true">
				<THEN>
					<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thisattrkey?x:"/>
					<SUBSTRING.ADDSTRING NAME="mysubstring"
					    VALUE='","'/>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisattrkey?:x"/>
				</THEN>
				<ELSE>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisattrtype"/>
					<SUBSTRING.ADDSTRING NAME="mysubstring"
					    VALUE='","'/>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisattr"/>
				</ELSE>
				</IF>
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='"),"field","Variables.thisconstrfield")'/>
			</THEN>
			</IF>

			<IF COND="Variables.thisconstrtype=value">
			<THEN>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HNUMCONSTRVALUECounters.fieldcounter"
					VARNAME="hnumconstrvalue"/>
				<!-- Generate the field/value pairs and build a list (stringvar: newlist) -->
				<!-- Build a comma-separated list of values -->
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='Util.addColumn(Util.makeList("value","'/>
				<SETCOUNTER NAME="valuecounter" VALUE="0"/>
				<LOOP UNTIL="Counters.valuecounter=Variables.hnumconstrvalue">
					<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HCONSTRVALUECounters.fieldcounter-Counters.valuecounter"
						VARNAME="thisvalue"/>
					<IF COND="Counters.valuecounter!=0">
					<THEN>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					</THEN>
					</IF>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.thisvalue"/>
					<INCCOUNTER NAME="valuecounter" VALUE="1"/>
				</LOOP>
				<substitute STR="Variables.valuestring" WHAT="&#34;" WITH="\&#34;" OUTSTR="valuestring"/>
				<SUBSTRING.ADDSTRING NAME="mysubstring"
				    VALUE='"),"field","Variables.thisconstrfield")'/>
			</THEN>
			</IF>

			<IF COND="Counters.fieldcounter!=0">
			<THEN>
				<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=")"/>
			</THEN>
			</IF>

			<INCCOUNTER NAME="fieldcounter" VALUE="1"/>
		    </LOOP>

		</ELSE>
		</IF>

		<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
    			ID="UtilObject" CLASS="UtilObject" VARIABLE="z"/>

		<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
			ID="CurrentDate" CLASS="CurrentDate" VARIABLE="y"/>

		<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
	    		ID="VisitorData" CLASS="VisitorData" VARIABLE="vd"/>

		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.remainder"/>
		<RULEDEF.APPENDCONDITION NAME="Variables.ruleobject"
			SUBSTRING="mysubstring"/>
	</THEN>
	</IF>

	<IF COND="Variables.leaftype=scalar">
	<THEN>
		<!-- Scalar attributes -->
		<SUBSTRING.CREATE NAME="mysubstring"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VARNAME"
			VARNAME="scalarname"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VARASSETID"
			VARNAME="varassetid"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="COMPAREOP"
			VARNAME="compareop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VALUE"
			VARNAME="value"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HIGHVALUE"
			VARNAME="highvalue"/>

		<IF COND="IsVariable.varassetid=true">
		<THEN>
			<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject"
				TYPE="ScalarVals" ID="Variables.varassetid"/>
		</THEN>
		</IF>

		<!-- Get the visitor data scalar attribute type -->
		<VISITORDATA.GETSCALARATTRIBUTEDEF ATTRIBUTE="Variables.scalarname" NAME="myDefObject"/>
		<VISITORSCALAR.GETTYPE NAME="myDefObject" VARNAME="scalartype"/>
		
		<substitute STR="Variables.value" WHAT="&#34;" WITH="\&#34;" OUTSTR="value"/>
		<if COND="IsVariable.highvalue=true">
			<then>
				<substitute STR="Variables.highvalue" WHAT="&#34;" WITH="\&#34;" OUTSTR="highvalue"/>
			</then>
		</if>
		
		<IF COND="Variables.scalartype=boolean">
		<THEN>
			<SETVAR NAME="mylhs" VALUE='vd.getScalarValueAsBoolean("Variables.scalarname",false)'/>
			<SETVAR NAME="mylowrhs" VALUE="Variables.value"/>
			<SETVAR NAME="myhighrhs" VALUE="Variables.highvalue"/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=string">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsString("Variables.scalarname","").compareTo("Variables.value")'/>
			<SETVAR NAME="mylowrhs" VALUE="0"/>
			<SETVAR NAME="myhighrhs" VALUE="0"/>
			<SETVAR NAME="newop" VALUE="Variables.compareop"/>

			<IF COND="Variables.compareop=cine">
			<THEN>
				<SETVAR NAME="mylhs"
				    VALUE='vd.getScalarValueAsString("Variables.scalarname","").equalsIgnoreCase("Variables.value")'/>
				<SETVAR NAME="mylowrhs" VALUE="true"/>
				<SETVAR NAME="myhighrhs" VALUE="true"/>
				<SETVAR NAME="newop" VALUE="!="/>
			</THEN>
			</IF>
			<IF COND="Variables.compareop=cieq">
			<THEN>
				<SETVAR NAME="mylhs"
				    VALUE='vd.getScalarValueAsString("Variables.scalarname","").equalsIgnoreCase("Variables.value")'/>
				<SETVAR NAME="mylowrhs" VALUE="true"/>
				<SETVAR NAME="myhighrhs" VALUE="true"/>
				<SETVAR NAME="newop" VALUE="=="/>
			</THEN>
			</IF>
			<IF COND="Variables.compareop=cont">
			<THEN>
				<SETVAR NAME="mylhs"
				    VALUE='vd.getScalarValueAsString("Variables.scalarname","").toLowerCase().contains("Variables.value".toLowerCase())'/>
				<SETVAR NAME="mylowrhs" VALUE="true"/>
				<SETVAR NAME="myhighrhs" VALUE="true"/>
				<SETVAR NAME="newop" VALUE="=="/>
			</THEN>
			</IF>
			<SETVAR NAME="compareop" VALUE="Variables.newop"/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=double">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsDouble("Variables.scalarname",0.0)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseDouble("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseDouble("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=money">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsMoney("Variables.scalarname",new java.math.BigDecimal(0.0)).doubleValue()'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseDouble("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseDouble("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=int">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsInt("Variables.scalarname",0)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseInt("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseInt("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=short">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsShort("Variables.scalarname",(short)0)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseShort("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseShort("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=long">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsLong("Variables.scalarname",(long)0)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseLong("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseLong("Variables.highvalue")'/>
		</THEN>
		</IF>
		<IF COND="Variables.scalartype=timestamp">
		<THEN>
			<SETVAR NAME="mylhs"
			    VALUE='vd.getScalarValueAsLong("Variables.scalarname",(long)0)'/>
			<SETVAR NAME="mylowrhs" VALUE='Util.parseLong("Variables.value")'/>
			<SETVAR NAME="myhighrhs" VALUE='Util.parseLong("Variables.highvalue")'/>
		</THEN>
		</IF>
		<CALLELEMENT NAME="OpenMarket/Gator/Rules/GenerateSegLeafOperation">
			<ARGUMENT NAME="substring" VALUE="mysubstring"/>
			<ARGUMENT NAME="operation" VALUE="Variables.compareop"/>
			<ARGUMENT NAME="lowrhs" VALUE="Variables.mylowrhs"/>
			<ARGUMENT NAME="highrhs" VALUE="Variables.myhighrhs"/>
			<ARGUMENT NAME="remainder" VALUE="Variables.empty"/>
		</CALLELEMENT>

		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.mylhs"/>

		<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
	    		ID="VisitorData" CLASS="VisitorData"
			VARIABLE="vd"/>
		<RULEDEF.APPENDCONDITION NAME="Variables.ruleobject"
			VALUE='vd.isScalarDefined("Variables.scalarname")'/>
		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.remainder"/>
		<RULEDEF.APPENDCONDITION NAME="Variables.ruleobject"
			SUBSTRING="mysubstring"/>
	</THEN>
	</IF>
	<IF COND="Variables.leaftype=cart">
	<THEN>
		<SUBSTRING.CREATE NAME="mysubstring"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="ASSETOP"
			VARNAME="assetop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="COMPAREOP"
			VARNAME="compareop"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="VALUE"
			VARNAME="value"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="HIGHVALUE"
			VARNAME="highvalue"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="CARTMODE"
			VARNAME="cartmode"/>
		<IF COND="Variables.assetop=count">
		<THEN>
			<SETVAR NAME="opmethod" VALUE="cart.queryItemCount"/>
		</THEN>
		<ELSE>
			<SETVAR NAME="opmethod" VALUE="cart.queryItemValue"/>
		</ELSE>
		</IF>

		<CALLELEMENT NAME="OpenMarket/Gator/Rules/GenerateSegLeafOperation">
			<ARGUMENT NAME="substring" VALUE="mysubstring"/>
			<ARGUMENT NAME="operation" VALUE="Variables.compareop"/>
			<ARGUMENT NAME="lowrhs" VALUE="Variables.value"/>
			<ARGUMENT NAME="highrhs" VALUE="Variables.highvalue"/>
			<ARGUMENT NAME="remainder" VALUE="Variables.empty"/>
		</CALLELEMENT>

		<!-- Output the opmethod, and prepend another paren to the remainder -->
		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE='Variables.opmethod('/>
		<SETVAR NAME="remainder" VALUE=")Variables.remainder"/>

		<IF COND="Variables.cartmode=all">
		<THEN>
			<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="null"/>
		</THEN>
		</IF>
		<IF COND="Variables.cartmode=specified">
		<THEN>
			<SUBSTRING.ADDSTRING NAME="mysubstring"
				VALUE='Util.makeList("assettype,assetid","'/>
			<SETVAR NAME="remainder" VALUE='")Variables.remainder'/>
			<SETCOUNTER NAME="loopctr" VALUE="0"/>
			<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="NUMASSETS" VARNAME="NumAssets"/>
			<LOOP UNTIL="Counters.loopctr=Variables.NumAssets">
				<!-- Get the asset type and name to generate -->
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="ASSETTYPECounters.loopctr"
					VARNAME="thisassettype"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="ASSETIDCounters.loopctr"
					VARNAME="thisassetid"/>
				<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="ASSETKEYCounters.loopctr"
					VARNAME="thisassetkey"/>
				<IF COND="IsVariable.thisassetkey=true">
				<THEN>
					<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="$(Variables.thisassetkey?x:)"
						ID="$(Variables.thisassetkey?:x)"/>
					<IF COND="Counters.loopctr!=0">
					<THEN>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					</THEN>
					</IF>
					<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thisassetkey?x:"/>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					<SUBSTRING.ADDVAR NAME="mysubstring" VALUE="Variables.thisassetkey?:x"/>
				</THEN>
				<ELSE>
					<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="Variables.thisassettype"
						ID="Variables.thisassetid"/>
					<IF COND="Counters.loopctr!=0">
					<THEN>
						<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE=","/>
					</THEN>
					</IF>
					<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE='Variables.thisassettype,Variables.thisassetid'/>
				</ELSE>
				</IF>
				<INCCOUNTER NAME="loopctr" VALUE="1"/>
			</LOOP>
		</THEN>
		</IF>
		<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
			ID="Cart" CLASS="Cart"
			VARIABLE="cart"/>
		<SUBSTRING.ADDSTRING NAME="mysubstring" VALUE="Variables.remainder"/>
		<RULEDEF.APPENDCONDITION NAME="Variables.ruleobject"
		    SUBSTRING="mysubstring"/>
	</THEN>
	</IF>
	<IF COND="Variables.leaftype=segment">
	<THEN>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="SEGID"
			VARNAME="thissegid"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="SEGKEY"
			VARNAME="thissegkey"/>
		<NVOBJECT.GETVALUE NAME="leafhintobject" VALUENAME="SEGCUTOFF"
			VARNAME="thiscutoff"/>
		<IF COND="IsVariable.thissegkey=true">
		<THEN>
			<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="Segments"
				ID="$(Variables.thissegkey?:x)"/>
			<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
				ID="RatingResult:Segments($(Variables.thissegkey?:x))"
				CLASS="RatingResult" VARIABLE="rr"/>
		</THEN>
		<ELSE>
			<RULESETDEF.ADDDEPENDENCY NAME="Variables.rulesetobject" TYPE="Segments"
				ID="Variables.thissegid"/>
			<RULEDEF.ADDEXISTS NAME="Variables.ruleobject"
				ID="RatingResult:Segments(Variables.thissegid)"
				CLASS="RatingResult" VARIABLE="rr"/>
		</ELSE>
		</IF>
		<RULEDEF.APPENDCONDITION NAME="Variables.ruleobject"
		    VALUE='rr.getRating() &#62;= Variables.thiscutoff'/>
	</THEN>
	</IF>
</THEN>
<ELSE>
	<XLAT.STREAM KEY="dvin/UI/Error/Invalidruletypemissing"/>
</ELSE>
</IF>
</FTCS>

<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">
<FTCS Version="1.1">
<!--
-                              OpenMarket/Xcelerate/Util/GetAssetFields
-
- INPUT
-
- AssetType
- whichflextype
- flexdefinition
-
- OUTPUT
-
-->

<!------------------------------------------------------------------------------------------------

 * Modified: Feb 22, 2011
 * By:       JAG
 * Reason:   Added Enhancement functionality which includes the following
 *           1)  User can configure via startmenu the UI From Mode or
                 Insite Layout Editing
             2)  Can assign Default Group/Parents based on selected Flex Definition
                 for both Single Value(SV) and Multi Value(MV) Parents
             3)  Can assign Default Associated/Customized Attributes based on
                 selected Flex Definition for both SingleValue(SV) and MultiValue(MV)
             5)  Provide the ability to assign MultiValue(MV) default values for all
                 supported datatypes

        Retrieve the Parent(s) Definition  Associated Parent List
        the list name = masterPDParents generated in the GetAssocParentsGroups ( Element )

     	The parentsList contains a Group of parents has more than one assignment name,
        separated by a '%' (denoted by %25). Need to Parse it out and set it into a list
        We need to set the given parents to all assignment Parent Definitions  as selected
        The masterPDList  is being set in the element Xcelerate/Actions/SetDeadlinePost.xml

 * Modified: March 22, 2011
 * By:       JAG
 * Reason:   Added Enhancement functionality which includes the following
 *           1)  Added "asset" as allowable attribute type
                 asset Reference both for Single Value and MultiValue 
             2)  SV Named Associations
             3)  MV Named Associations

 * Modified  April 13, 2010
 * Reason :  Handle the flex family definition  name passed in
             as "Any"  for named Associations

  Modified:   April 22, 2011
  By:         JAG
  Reason:     PR#25701 Start Menu default values for attributes of type asset do not show up when creating assets
              Default value FOR child ASSET references in the start menu edit screen is not correct. Shows ${AssetType} Example
              Media_C twice colon Asset ID.
              
  Modified:   April 22, 2011
  By:         JAG
  Reason:     PR#25705  Attribute Type for both money and float is mapped to Key word "Deciaml"
              and when clienttype equals "Deciaml" a Default Value Option needs to
              be generated.

*  Modified:  April 25, 2011
   By:        JAG
   Reason:    PR#25709 Fixed the creating start menu for an extensible page asset type
              to select a Flex Page Definition ( Template ) and to collect, process, display
              and set default values for all Extended and associated custom attributes
              for that start menu selected page  definition.

   Modified:  April 27, 2011
   By:        JAG
   Reason:    Added Smart Processing and support for FLEX BASE Family Processing
              Example of FLEX BASE is ExtensiblePage  has FLEX Family Definition with
              NO Parents/Groups
			  
 * Modified:  May 10, 2011
 * By:        JAG
 * Reason:    Enhancement Added the Grouping and Section Attribute Type Heading(s) into both
              Default Value ALL Attributes ( Attributes Flex Defined, Parents, Associations and Meta Attributes )
              Pulldown and its associated assigned Values Pulldown. All attributes are displayed with the
              special prefix removed and just the "Name" post fixed with (S) or (M) for MultiValue / SingleValue.
              Improved the in ADD / REMOVE attribute functinality with respect to Grouped sections.
    
-------------------------------------------------------------------------------------------->

<!--
    Lets determine if we need to generate the Master Family Parent Table
    of Parent Definitions
-->


<IF COND="Variables.whichflextype=asset">
<THEN>
  <IF COND="Variables.flexdefinition!=Any">
    <THEN>   
        <!--
            Call GetAssocParentGroups to Get The Associated Parents / Groups
            for Flex Family Definition
                 1)  AssetType
                 2)  TemplateType
                 3)  TemplateChosen
        -->
        <!--
              USE FATM Is this a FLEX with Parents or FLEX LITE no Parents
              Get the FLEX Asset Family Templates
                   1)  grouptype
                   2)  templatetype
			       3)  attributetype
			       4)  filtertype   Table 

          -->
        <FATM.GETALL ASSETTYPE="Variables.item:assettype" LISTVARNAME="lFamily" />

        <IF COND="lFamily.grouptype!=None">
        <THEN>
         <CALLELEMENT NAME="OpenMarket/Xcelerate/Util/GetAssocParentGroups">
           <ARGUMENT NAME="AssetType"    VALUE="Variables.item:assettype"/>
           <ARGUMENT NAME="TemplateType" VALUE="lFamily.templatetype"/>
           <ARGUMENT NAME="Templateid"   VALUE="lDef.id"/>
         </CALLELEMENT>
       </THEN>
       </IF>
    </THEN>
  </IF>
</THEN>
</IF>

<!--
    Query and Generate  association definitions Meta Table
    for a given asset type (and subtype).
-->


    
<CALLELEMENT NAME="OpenMarket/Xcelerate/Util/GetAssetAssociations">
      <ARGUMENT NAME="AssetType"    VALUE="Variables.item:assettype"/>
      <ARGUMENT NAME="SubType"      VALUE="Variables.flexdefinition"/>
</CALLELEMENT>

<SETVAR NAME="fieldsMV" VALUE=""/>
<HASH.CREATE NAME="hAllowedTypes"/>

<!--
  Is a Flex Master Parent Group Table
  been created Build a LookUP Table
  in essence a delimited list of
  Definitions ( Parents anf Groups )
 -->
<IF COND="IsList.masterPDParents=true">
    <THEN>
        <IF COND="masterPDParents.#numRows!=0">
		   <THEN>
              <loop LIST="masterPDParents">
               <setvar NAME="pDefName"  VALUE="masterPDParents.parentDefName"/>
               <setvar NAME="lParents"  VALUE="masterPDParents.lEnumVals"/>
               <setvar NAME="parentFields"   VALUE="Variables.parentFields;Variables.pDefName"/>
             </loop>
          </THEN>
       </IF>
    </THEN>
 </IF>


<HASH.CREATE NAME="hFieldsToIgnore"/>
<HASH.ADD NAME="hFieldsToIgnore" VALUE="flextemplateid"/>

<!--
      Adding support for default parents we are
      will no longer ignore Parents ( Group )
  -->

<HASH.ADD NAME="hFieldsToIgnore" VALUE="flexgrouptemplateid"/>
<!--
  HASH.ADD NAME="hFieldsToIgnore" VALUE="path"/>
  <HASH.ADD NAME="hFieldsToIgnore" VALUE="filename"/-->

<HASH.CREATE NAME="hFieldsToDisplay"/>

<HASH.ADD NAME="hAllowedTypes" VALUE="string"/>
<HASH.ADD NAME="hAllowedTypes" VALUE="float"/>
<HASH.ADD NAME="hAllowedTypes" VALUE="int"/>

<HASH.ADD NAME="hAllowedTypes" VALUE="assetreference"/>

<!-- 
	Addition of the 'date' type to the hash is for the Site Preview Proj.
	This needs to be done as part of making 'Start Date' and 'End Date' attributes
	available for every asset and hence default values for those attributes 
	in the start menu items need to be available as well.
	-Sathish Paul Leo
-->
<HASH.ADD NAME="hAllowedTypes" VALUE="date"/>


<!-- TODO Must make a call to Item Ignore List

  -->
<CALLELEMENT NAME="OpenMarket/Xcelerate/Util/CreateStartMenuItemIgnoreList" />

<IF COND="Variables.Definition!=Any">
<THEN>
    <!-- Creates an object with the asset's attributes and the specification for each attribute. -->
    <ASSET.INSPECT TYPE="Variables.AssetType" LIST="lInspectFields" SUBTYPE="lDef.name"/>
</THEN>
<ELSE>
    <ASSET.INSPECT TYPE="Variables.AssetType" LIST="lInspectFields"/>
</ELSE>
</IF>


<HASH.CREATE NAME="hAllFields" LIST="lInspectFields" COLUMN="name"/>
<!--
   Transverse ALL Startmenu AssetType Flex Family ( Definition )
   Attributes   -
   Parents, Attribute ( AssetReference ), Associations ( Named and Unamed )
  -->
<LOOP LIST="lInspectFields">
    
    <HASH.CONTAINS NAME="hFieldsToIgnore" VALUE="lInspectFields.name" VARNAME="hasit"/>
    <IF COND="Variables.hasit=false">
	<THEN>
		<SETVAR NAME="ignoreCurrentAttribute" VALUE="false" />


        <CALLELEMENT NAME="OpenMarket/Xcelerate/Util/CheckIgnoreList">
			<ARGUMENT NAME="AssetType" VALUE="Variables.AssetType"/>
			<ARGUMENT NAME="AttrName" VALUE="lInspectFields.name" />
		</CALLELEMENT>

        <IF COND="Variables.ignoreCurrentAttribute=false">
		<THEN>
          <INSPECTOR.PARSETYPESTRING VALUE="lInspectFields.spec" ATTRIBUTE="lInspectFields.name" LISTVARNAME="lTypeInfo"/>
         
		<!--
              Attributes that is editable and SV ( Parents Gets Collected )
           -->
          <IF COND="lTypeInfo.readonly=false">
	      <THEN>
             <IF COND="lTypeInfo.multiple=false">
	         <THEN>
                <HASH.CONTAINS NAME="hAllowedTypes" VALUE="lTypeInfo.type" VARNAME="hasit"/>
                <IF COND="Variables.hasit=true">
	            <THEN>

                    <BEGINS STR="lInspectFields.name" WHAT="Group_"/>
                       <IF COND="Variables.errno=0">
                        <THEN>
                          <HASH.ADD NAME="hFieldsToDisplay" VALUE="lInspectFields.name"/>
                      </THEN>
                      </IF> 
                </THEN>
                <ELSE>
                    <LOGMSG  STR=" $-> NO lInspectFields.name lTypeInfo.type  lTypeInfo.multiple    "  />
                </ELSE>
                </IF>
	         </THEN>
			 <ELSE>
               <!--
                   This is a MultiValue now needs to be determined if
                   the following is True
                    1) Attribute_{$name} and is is MV
                    2) Association-named {$name} and is is MV
                -->
                <BEGINS STR="lInspectFields.name" WHAT="Attribute_"/>
                     <IF COND="Variables.errno=1">
                        <THEN>
                           <HASH.CONTAINS NAME="hAllowedTypes" VALUE="lTypeInfo.type" VARNAME="hasit"/>
                           <IF COND="Variables.hasit=true">
	                        <THEN>
                              <HASH.ADD NAME="hFieldsToDisplay" VALUE="lInspectFields.name"/>
                              <!-- Yes Push it to the Allowable MV Attribute_${Name} -->
                              <SETVAR NAME="fieldsMV" VALUE="Variables.fieldsMV;lInspectFields.name"/>
                            </THEN>
	                       </IF>
                         </THEN>
                     </IF>

                 <BEGINS STR="lInspectFields.name" WHAT="Association-named"/>
                    <IF COND="Variables.errno=1">
                    <THEN>
                            <HASH.ADD NAME="hFieldsToDisplay" VALUE="lInspectFields.name"/>
                            <!-- Yes Push it to the Allowable MV Association-named:${Name} -->
                            <SETVAR NAME="fieldsMV" VALUE="Variables.fieldsMV;lInspectFields.name"/>
                    </THEN>
                  </IF>
                 <!-- Dimension as Singled out Attribute ? --> 
                <IF COND="lInspectFields.name=Dimension">
				<THEN>
					<HASH.ADD NAME="hFieldsToDisplay" VALUE="lInspectFields.name"/>
                </THEN>
				</IF>
			 </ELSE>
	         </IF>
	      </THEN>
	      </IF>
	  </THEN>
	  </IF>
	</THEN>
	</IF>
</LOOP>

<HASH.TOSTRING NAME="hFieldsToDisplay" VARNAME="fields" DELIM=";"/>
<IF COND="IsVariable.Definition=false">
<THEN>
<IF COND="Variables.AssetType!=Promotions">
<THEN>
   <SETVAR NAME="fields" VALUE="Variables.fields;subtype"/>
</THEN>
</IF>
</THEN>
</IF>

<SETVAR NAME="stagefields" VALUE="Variables.fields"/>

<!--
   Only if we have Master Parent LookUP Table..
   Generate the List of Parents / Groups and MV Custom Attributes
   to be merged with the Default List of Attributes
   If a list Parents must be display as a Pulldown
  -->
<IF COND="IsList.masterPDParents=true">
<THEN>
   <IF COND="masterPDParents.#numRows!=0">
   <THEN>
      <loop LIST="masterPDParents">
        <SETVAR NAME="stagefields" VALUE="Variables.stagefields;masterPDParents.displayName"/>
        <SETVAR NAME="fields" VALUE="Variables.fields;masterPDParents.parentDefName"/>
      </loop>
   </THEN>
  </IF>
</THEN>
</IF>
<!--
  Vareiable fields is used to Populate the
   Default fields Pulldown in startmenu.xml ( UI )
-->

<STRING.SORT VALUE="Variables.fields" DELIM=";" VARNAME="fields"/>
<STRING.SORT VALUE="Variables.stagefields" DELIM=";" VARNAME="stagefields"/>

<!-- this is a miserable way to keep the sorted fields in sync with the parsed spec -->
<STRINGLIST NAME="lStartMenuArgVals" STR="Variables.fields" DELIM=";"/>

<SETVAR NAME="parentAssetRef" VALUE="assetreference" />

<LISTOBJECT.CREATE NAME="oStartMenuArgVals" COLUMNS="readonly,required,multiple,clienttype,type,reftype,refsubtype,fieldname,enumvals,enumdisplay"/>


<LOOP LIST="lStartMenuArgVals">

    <LOOP LIST="lInspectFields">

        <IF COND="lStartMenuArgVals.ITEM=lInspectFields.name">
        <THEN>
            <INSPECTOR.PARSETYPESTRING VALUE="lInspectFields.spec" ATTRIBUTE="lInspectFields.name" LISTVARNAME="lTypeInfo"/>

            <IF COND="lInspectFields.name=Dimension">
			<THEN>
				<!-- If it is a Dimension attribute, retrieve the list of dimensions available, and create a comma delimited string out of the list-->
				<ASSET.LIST TYPE="Dimension" LIST="listLocales" PUBID="SessionVariables.pubid" EXCLUDEVOIDED="true" ORDER="description">
					<ASSET.ARGUMENT NAME="subtype" VALUE="Locale" />
				</ASSET.LIST>
				<SETVAR NAME="localeNameList" VALUE=""/>
				<SETVAR NAME="localeIdList" VALUE="" />
				<LOOP LIST="listLocales">
					<ICS.LISTGET LISTNAME="listLocales" FIELDNAME="id" output="localeId" />
					<ICS.LISTGET LISTNAME="listLocales" FIELDNAME="name" output="localeName" />
					<SETVAR NAME="localeNameList" VALUE="Variables.localeNameList,Variables.localeName" />
					<SETVAR NAME="localeIdList" VALUE="Variables.localeIdList,Variables.localeId" />					
				</LOOP>
	
               <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                   readonly="lTypeInfo.readonly"
                                   required="lTypeInfo.required"
                                   multiple="lTypeInfo.multiple"
                                   clienttype="lTypeInfo.clienttype"
                                   type="lTypeInfo.type"
                                   reftype="lTypeInfo.reftype"
                                   refsubtype="lTypeInfo.refsubtype"
                                   fieldname="lInspectFields.name"
                                   enumvals="Variables.localeIdList"
                                   enumdisplay="Variables.localeNameList"/>
			</THEN>
			<ELSE>

                <IF COND="lTypeInfo.type=Variables.parentAssetRef">
                <THEN>

                    <setvar NAME="childassettype"  VALUE="lTypeInfo.reftype"/>
                    <setvar NAME="multiple"  VALUE="lTypeInfo.multiple"/>
                    <setvar NAME="deptype"  VALUE="lTypeInfo.deptype"/>

                    <!--
                         Is a Flex Master Parent Group  Table been created
                     -->
                    <IF COND="IsList.masterPDParents=true">
                      <THEN>

                         <SETVAR NAME="parentFound" VALUE="No"/>

                          <loop LIST="masterPDParents">

                          <setvar NAME="pDefName"            VALUE="masterPDParents.parentDefName"/>
                          <setvar NAME="lParentEnumDisplay"  VALUE="masterPDParents.lEnumDisplay"/>
                          <setvar NAME="lParentEnumVals"     VALUE="masterPDParents.lEnumVals"/>

                          <IF COND="Variables.pDefName=lInspectFields.name">
                          <THEN>
                               <SETVAR NAME="parentFound" VALUE="Yes"/>
                               <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                   readonly="lTypeInfo.readonly" required="lTypeInfo.required" multiple="lTypeInfo.multiple"
                                   clienttype="lTypeInfo.clienttype"
                                   type="lTypeInfo.type"
                                   reftype="lTypeInfo.reftype"
                                   refsubtype="lTypeInfo.refsubtype"
                                   fieldname="lInspectFields.name"
                                   enumvals="Variables.lParentEnumVals"
                                   enumdisplay="Variables.lParentEnumDisplay"/>

                           </THEN>
                        </IF>
                       </loop>

                       <!--
                           Only Add to Table if it was Not Parent
                        -->
                       <IF COND="Variables.parentFound=No">
                       <THEN>
                               <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                   readonly="lTypeInfo.readonly"
                                   required="lTypeInfo.required"
                                   multiple="lTypeInfo.multiple"
                                   clienttype="lTypeInfo.clienttype"
                                   type="lTypeInfo.type"
                                   reftype="lTypeInfo.reftype"
                                   refsubtype="lTypeInfo.refsubtype"
                                   fieldname="lInspectFields.name"
                                   enumvals="lTypeInfo.enumvals"
                                   enumdisplay="lTypeInfo.enumdisplay"/>
                        </THEN>
                       </IF>
                   </THEN>
                   <ELSE>
                          <IF COND="IsList.masterNamedAssocList=true">
                          <THEN>
                              <LOOP LIST="masterNamedAssocList">
                                    <setvar NAME="assocname"  VALUE="masterNamedAssocList.name"/>
                                    <IF COND="Association-named:Variables.assocname=lInspectFields.name">
                                    <THEN>
                                         <setvar NAME="childassettype"  VALUE="masterNamedAssocList.childassettype"/>
                                         <setvar NAME="multiple"  VALUE="masterNamedAssocList.multiple"/>
                                         <setvar NAME="deptype"  VALUE="masterNamedAssocList.deptype"/>
                                         <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                                            readonly="lTypeInfo.readonly"
                                                            required="lTypeInfo.required"
                                                            multiple="Variables.multiple"
                                                            clienttype="List"
                                                            type="lTypeInfo.type"
                                                            reftype="Variables.childassettype"
                                                            refsubtype="lTypeInfo.refsubtype"
                                                            fieldname="lInspectFields.name"
                                                            enumvals="lTypeInfo.enumvals"
                                                            enumdisplay="lTypeInfo.enumdisplay"/>

                                     </THEN>
                                     </IF>
                            </LOOP>
                       </THEN>
                       <ELSE>
                           <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                                            readonly="lTypeInfo.readonly"
                                                            required="lTypeInfo.required"
                                                            multiple="Variables.multiple"
                                                            clienttype="List"
                                                            type="lTypeInfo.type"
                                                            reftype="Variables.childassettype"
                                                            refsubtype="lTypeInfo.refsubtype"
                                                            fieldname="lInspectFields.name"
                                                            enumvals="lTypeInfo.enumvals"
                                                            enumdisplay="lTypeInfo.enumdisplay"/>
                       </ELSE>
                       </IF>
                   </ELSE>
                   </IF>
                </THEN>
                <ELSE>
                    <BEGINS STR="lInspectFields.name" WHAT="Association-named"/>
                    <IF COND="Variables.errno=1">
                    <THEN>
                           <IF COND="IsList.masterNamedAssocList=true">
                            <THEN>
                                <LOOP LIST="masterNamedAssocList">
                                    <SETVAR NAME="assocname"  VALUE="masterNamedAssocList.name"/>
                                    <IF COND="Association-named:Variables.assocname=lInspectFields.name">
                                     <THEN>
                                         <setvar NAME="childassettype"  VALUE="masterNamedAssocList.childassettype"/>
                                         <setvar NAME="multiple"  VALUE="masterNamedAssocList.multiple"/>
                                         <setvar NAME="deptype"  VALUE="masterNamedAssocList.deptype"/>

                                         <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                                            readonly="lTypeInfo.readonly"
                                                            required="lTypeInfo.required"
                                                            multiple="Variables.multiple"
                                                            clienttype="List"
                                                            type="lTypeInfo.type"
                                                            reftype="Variables.childassettype"
                                                            refsubtype="lTypeInfo.refsubtype"
                                                            fieldname="lInspectFields.name"
                                                            enumvals="lTypeInfo.enumvals"
                                                            enumdisplay="lTypeInfo.enumdisplay"/>                                         
                                     </THEN>
                                     </IF>
                                  </LOOP>
                            </THEN>
                           </IF>
                     </THEN>
                   <ELSE>
                   		<IF COND="lInspectFields.name=template">
						<THEN>
							<!-- If it is a Template attribute, retrieve the list of SITE templats available, 
					 			 and create a comma delimited string out of the list
				 			  -->
				 			<IF COND="IsVariable.flexdefinition=true">			
							<THEN>
				      			<TEMPLATEMANAGER.GetTemplateNames LISTVARNAME="smtemplates" ASSETTYPES="Variables.AssetType" SUBTYPE="Variables.flexdefinition" PUBID="SessionVariables.pubid" EXCLUDEVARIANTS="true" TTYPE="l"/>
				    		</THEN>
				    		<ELSE>
				       			<TEMPLATEMANAGER.GetTemplateNames LISTVARNAME="smtemplates" ASSETTYPES="Variables.AssetType"  PUBID="SessionVariables.pubid" EXCLUDEVARIANTS="true" TTYPE="l"/>				  
				   		    </ELSE>
				   		    </IF>
				    												     					   
							<IF COND="smtemplates.#numRows!=0">
							<THEN>
								<SETVAR NAME="templateName" VALUE=""/>				 
								
								<LOOP LIST="smtemplates">
					    		 <SETVAR NAME="templateName" VALUE="Variables.templateName,smtemplates.tname" />				
							    </LOOP>					
														 							
								<LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                  	 readonly="lTypeInfo.readonly"
                                  	 required="lTypeInfo.required"
                                  	 multiple="lTypeInfo.multiple"
                                  	 clienttype="List"
                                  	 type="lTypeInfo.type"
                                  	 reftype="lTypeInfo.reftype"
                                  	 refsubtype="lTypeInfo.refsubtype"
                                  	 fieldname="lInspectFields.name"
                                  	 enumvals="Variables.templateName"
                                   	 enumdisplay="Variables.templateName"/>
						    </THEN>
						    </IF>
						    </THEN>
						    <ELSE>
						   										
                        	  <LISTOBJECT.ADDROW NAME="oStartMenuArgVals"
                                   readonly="lTypeInfo.readonly"
                                   required="lTypeInfo.required"
                                   multiple="lTypeInfo.multiple"
                                   clienttype="lTypeInfo.clienttype"
                                   type="lTypeInfo.type"
                                   reftype="lTypeInfo.reftype"
                                   refsubtype="lTypeInfo.refsubtype"
                                   fieldname="lInspectFields.name"
                                   enumvals="lTypeInfo.enumvals"
                                   enumdisplay="lTypeInfo.enumdisplay"/>
						 </ELSE>
						 </IF>                 
                </ELSE>
                </IF>   
                </ELSE>
                </IF>             
				</ELSE>
			
				
			</IF>
			
				
        </THEN>
        </IF>
    </LOOP>
</LOOP>

<!--
    Converts a list object to a result set list.
    This List is Processed by ShowStartMenuArgs element
    to create all the default aTTRIBUTES Values or List of
    attribute/argument values 

    Lets Group The Attributes
 -->

<INPUT TYPE="HIDDEN"  NAME="AttributeMVList" VALUE="Variables.fieldsMV" REPLACEALL="Variables.fieldsMV"/>

<SETVAR NAME="fields" VALUE="Variables.stagefields"/>

<LISTOBJECT.TOLIST NAME="oStartMenuArgVals" LISTVARNAME="lStartMenuArgValInspect"/>
  
<LISTOBJECT.TOLIST NAME="oStartMenuArgVals" LISTVARNAME="SMVGroupByName"/>
<CALLELEMENT NAME="OpenMarket/Xcelerate/Util/dogroupSM">
  <ARGUMENT NAME="assettype"    VALUE="Variables.item:assettype"/>
  <ARGUMENT NAME="subtype"      VALUE="lFamily.templatetype"/>
  <ARGUMENT NAME="fields"       VALUE="Variables.fields" />
</CALLELEMENT>

<INPUT TYPE="HIDDEN"  NAME="fieldsid"    VALUE="Variables.fieldsid" REPLACEALL="Variables.fieldsid"/>
<INPUT TYPE="HIDDEN"  NAME="fieldslabel" VALUE="Variables.fieldslabel" REPLACEALL="Variables.fieldslabel"/>
<INPUT TYPE="HIDDEN"  NAME="dogroupSM"   VALUE="Load" />
  
</FTCS>

<?XML VERSION="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd"><FTCS Version="1.0">

<SCRIPT LANGUAGE="JavaScript">
function isKeyEntered(form)
{
<![CDATA[	if ( (form.key.value == "") && (!form.form[1].checked) )
		form.key.value = "%";
	if ( (form.key.value == "%") && (form.form[1].checked) )
		form.key.value = "";
]]>
	return true;
}

function isPagenameEntered(form)
{
    if(form.NewPagename.value == "")
	{
        alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustEnterAPageName" ENCODE="false" ESCAPE="true"/>');
        return false;
    }
    return true;
}

function isRootnameEntered(form)
{
    if (form.rootelement.value == "")
	{
        window.alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustEnterARootElement" ENCODE="false" ESCAPE="true"/>');
        return false;
    }
	return true;
}

function checkAddPage(form)
{
	if (!isPagenameEntered(form))
		return false;

	if (!isRootnameEntered(form))
		return false;

	if (!setupACLParam(form))
		return false;

	return setupModifyCacheParam(form);
}

function setupViewParams(form)
{
<![CDATA[
    for(i=0; i < form.elements.length; i++)
	{
        obj = form.elements[i];
        if(obj.name.indexOf('pagename') == 0)
        {
			if (obj.checked)
			    return true;
		}
	}
]]>
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPageSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}

function checkModifyPage(form)
{
	if (!isRootnameEntered(form))
		return false;

	if (!setupACLParam(form))
		return false;

	if (!setupModifyCacheParam(form))
		return false;

	var selectedPage = form.testpagename.value;
	if ( isSystemPage(selectedPage) )
	{
		var replacestr=/\bVariables.item\b/;
		var xlatstr='<XLAT.STREAM KEY="dvin/AdminForms/ModifyingMayCauseMalfunction" ENCODE="false" ESCAPE="true"/>';
		var newstr=xlatstr.replace(replacestr, selectedPage);
		if (!confirm(newstr))
			return false;
      }
	return true;
}

function getModifyCacheParam(form, cacheInput, cacheIndex)
{
	var locationOffset = 5;
	var intervalOffset = 8;
	var timeoutOffset = 10;
	var hostOffset = 11;

	var cacheText = " ";

	if (form.locationOption[0].checked)
	{
		return cacheText;
	}
	else if (form.locationOption[1].checked)
	{
		cacheText = "CS.NEVERCACHE,*,*";
		return cacheText;
	}
	else if (form.locationOption[2].checked)
	{
		cacheText = "*";
	}
	else if (form.locationOption[3].checked)
	{
		cacheText = form.elements[cacheIndex+locationOffset].value;
		if (cacheText == "")
		{
			alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustEnterACacheLocation" ENCODE="false" ESCAPE="true"/>');
			return null;
		}
	}
	else
		return null;

	var hostText = form.elements[cacheIndex + hostOffset].value;

	if (form.expirationOption[0].checked)
	{
		cacheText += ",*";
	}
	else if (form.expirationOption[1].checked)
	{
		var expireText = form.elements[cacheIndex+intervalOffset].value;
		if (expireText == "" || isNaN(expireText))
		{
			alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustEnterAValidCacheExpirationInterval" ENCODE="false" ESCAPE="true"/>');
			return null;
		}
		cacheText += ",~" + expireText;
	}
	else if (form.expirationOption[2].checked)
	{
		var timeoutText = form.elements[cacheIndex+timeoutOffset].value;
		if (timeoutText == "")
		{
			alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustEnterAValidCacheExpirationTimeout" ENCODE="false" ESCAPE="true"/>');
			return null;
		}
		cacheText += ",@" + timeoutText;
	}
	else
		return null;

	if ( hostText != "")
		cacheText += "," + hostText;

	return cacheText;
}
<![CDATA[
function setupModifyCacheParam(form)
{
	var cacheIndex = 0;
	var cacheInput = null;
	for (cacheIndex=0; cacheIndex < form.elements.length; cacheIndex++)
	{
		cacheInput = form.elements[cacheIndex];
		if (cacheInput.name == "cacheinfo")
			break;
	}

	if (cacheIndex == form.elements.length)
		return false;

	var cacheText = getModifyCacheParam(form,cacheInput,cacheIndex);
	if (!cacheText)
		return false;

    cacheInput.value = cacheText;
	return true;
}

]]>
function setupModifyCacheParams(form)
{
	var cacheIndex = 0;
	var cacheInput = null;
	<![CDATA[
	for (cacheIndex=0; cacheIndex < form.elements.length; cacheIndex++)
	]]>
	{
		cacheInput = form.elements[cacheIndex];
		if (cacheInput.name == "cacheinfo")
		break;
	}
	
	if (cacheIndex == form.elements.length)
		return false;
	
	var cacheText = getModifyCacheParam(form,cacheInput,cacheIndex);
	if (!cacheText)
		return false;
	
	counter=0;
	<![CDATA[
	for(i=0; i < form.elements.length; i++)
	]]>
	{
		obj = form.elements[i];
		
		if(obj.name == "FTcheckbox" && obj.checked)
		{
			var selectedPage = form.elements[i-7].value;
			if ( isSystemPage(selectedPage) )
			{
			var replacestr=/\bVariables.item\b/;
			var xlatstr='<XLAT.STREAM KEY="dvin/AdminForms/ModifyingMayCauseMalfunction" ENCODE="false" ESCAPE="true"/>';
			var newstr=xlatstr.replace(replacestr, selectedPage);
			if (!confirm(newstr))
				continue;
			}
			elementPageName = form.elements[i-7];
			elementPageName.name = 'pagename' + counter;
			for (j=6; j > 1; j--)
			{
				incrementer = form.elements[i-j];
				incrementer.name += counter;
			}
			elementCacheinfo = form.elements[i-1];
			elementCacheinfo.name += counter;
			elementCacheinfo.value=cacheText;
			
			counter++;
		} else {
			if ( obj.name == "FTcheckbox" )
			{
				elementPageName = form.elements[i-7];
				elementPageName.name = 'Notpagename';
			}
		}
	}
	if (counter > 0)
		return true;
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}

function setupClearCacheParams(form)
{
	var userConfirmed = false;
	var counter=0;
<![CDATA[
	for(i=0 ; i < form.elements.length ; i++)
	{
        obj = form.elements[i];
        if(obj.name == "FTcheckbox" && obj.checked)
		{
]]>
			if (!userConfirmed)
			if (!confirm('<XLAT.STREAM KEY="dvin/AdminForms/AreYouSureYouWantToClearPagesFromCache" ENCODE="false" ESCAPE="true"/>'))
					return false;
			userConfirmed = true;

			elementPageName = form.elements[i-1];
            elementPageName.name += counter;

            counter++;
        }
    }

    if (counter > 0)
		return true;
		alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}

function setupDeleteParams(form)
{
	var userConfirmed = false;
	var counter=0;
	<![CDATA[
	for(i=0 ; i < form.elements.length ; i++)
	]]>
	{
		obj = form.elements[i];
		
		if(obj.name == "FTcheckbox" && obj.checked)
		{
			if (!userConfirmed)
				if (!confirm('<XLAT.STREAM KEY="dvin/AdminForms/AreYouSureYouWantToDeleteThesePages" ENCODE="false" ESCAPE="true"/>'))
					return false;
			userConfirmed = true;
			
			var selectedPage = form.elements[i-1].value;
			if ( isSystemPage(selectedPage) )
			{
				var replacestr=/\bVariables.item\b/;
				var xlatstr='<XLAT.STREAM KEY="dvin/AdminForms/ModifyingMayCauseMalfunction" ENCODE="false" ESCAPE="true"/>';
				var newstr=xlatstr.replace(replacestr, selectedPage);
				if (!confirm(newstr))
					continue;
			}
			
			elementPageName = form.elements[i-1];
			elementPageName.name += counter;
			
			counter++;
		} else {
			if ( obj.name == "FTcheckbox" )
			{
				elementPageName = form.elements[i-1];
				elementPageName.name = 'Notpagename';
			}
		}
	}
	
	if (counter > 0)
	{
		return true;
	}
	
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}

function setupExportParams(form)
{
	var numPagesParam = null;
	var userConfirmed = false;
	var counter=0;
<![CDATA[
	for(i=0 ; i < form.elements.length ; i++)
	{
        obj = form.elements[i];

        if(obj.name == "FTcheckbox" && obj.checked)
		{
]]>
			if (!userConfirmed)
			if (!confirm('<XLAT.STREAM KEY="dvin/AdminForms/AreYouSureYouWantToExportThesePages" ENCODE="false" ESCAPE="true"/>'))
					return false;
			userConfirmed = true;

			elementPageName = form.elements[i-1];
            elementPageName.name = "exportpage" + counter;

			numPagesParam = form.elements[i+1];

			forceParam = form.elements[i+2];
			forceCheck = form.elements[i+3];
			forceParam.name = "force" + counter;
			if (forceCheck.checked)
				forceParam.value = "true";
			else
				forceParam.value = "false";

            counter++;
        }
    }
<![CDATA[
    if ( (counter > 0) && (numPagesParam != null) )
	{
		numPagesParam.name = "numPages";
		numPagesParam.value = counter;
		return true;
	}
]]>
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}

function setupModifyStatusParams(form)
{
	var selectedStatus = "";
	<![CDATA[
	for (i=0; i < form.elements.length; i++)
	]]>
	{
		obj = form.elements[i];
		if (obj.name == "FTStatusSelect")
		{
			var index = obj.selectedIndex;
			selectedStatus = obj.options[index].value;
			break;
		}
	}
	if (selectedStatus == "")
	{
		alert('<XLAT.STREAM KEY="dvin/AdminForms/YouMustSelectAStatus" ENCODE="false" ESCAPE="true"/>');
		return false;
	}
	
	counter=0;
	<![CDATA[
	for(i=0; i < form.elements.length; i++)
	]]>
	{
		obj = form.elements[i];
		
		if(obj.name == "FTcheckbox" && obj.checked)
		{
			var selectedPage = form.elements[i-2].value;
			if ( isSystemPage(selectedPage) )
			{
			var replacestr=/\bVariables.item\b/;
			var xlatstr='<XLAT.STREAM KEY="dvin/AdminForms/ModifyingMayCauseMalfunction" ENCODE="false" ESCAPE="true"/>';
			var newstr=xlatstr.replace(replacestr, selectedPage);
			if (!confirm(newstr))
				continue;
			}
			elementPageName = form.elements[i-2];
			elementPageName.name = 'pagename' + counter;
			elementStatus = form.elements[i-1];
			elementStatus.name += counter;
			elementStatus.value=selectedStatus;
			counter++;
		} else {
			if ( obj.name == "FTcheckbox" )
			{
				elementPageName = form.elements[i-2];
				elementPageName.name = 'Notpagename';
			}
		}
	}
	
	if (counter > 0)
		return true;
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	return false;
}
<![CDATA[
function getACLParam(ACLSelect)
{
	var selectedACL = "";
	var numACLs = 0;
	for (j=0; j < ACLSelect.options.length; j++)
	{
		if (ACLSelect.options[j].selected)
		{
			if (numACLs++ > 0)
				selectedACL += ',';
			selectedACL += ACLSelect.options[j].value;
		}
	}
	if (selectedACL == "")
		selectedACL = " ";
	return selectedACL;
}

function setupACLParam(form)
{
	var selectedACL = null;

    for(i=0 ; i < form.elements.length ; i++)
	{
		obj = form.elements[i];
		if (obj.name == "ACLList")
		{
			selectedACL = getACLParam(obj);

			hidden = form.elements[i-1];
			hidden.value = selectedACL;
			return true;
		}
	}
	return false;
}

]]>
function setupModifyACLParams(form)
{
	var selectedACL = null;
	
	<![CDATA[
	for(i=0; i < form.elements.length; i++)
	]]>
	{
		obj = form.elements[i];
		if (obj.name == "ACLList")
		selectedACL = getACLParam(obj);
	}
	
	if (!selectedACL)
		return false;
	
	counter=0;
	<![CDATA[
	for(i=0 ; i < form.elements.length ; i++)
	]]>
	{
		obj = form.elements[i];
		if(obj.name == "FTcheckbox" && obj.checked)
		{
			var selectedPage = form.elements[i-7].value;
			if ( isSystemPage(selectedPage) )
			{
				var replacestr=/\bVariables.item\b/;
				var xlatstr='<XLAT.STREAM KEY="dvin/AdminForms/ModifyingMayCauseMalfunction" ENCODE="false" ESCAPE="true"/>';
				var newstr=xlatstr.replace(replacestr, selectedPage);
				if (!confirm(newstr))
				continue;
			}
			elementPagename = form.elements[i-7];
			elementPagename.name = 'pagename' + counter;
			for (j=6; j > 1; j--)
			{
				incrementer = form.elements[i-j];
				incrementer.name += counter;
			}
			elementACL = form.elements[i-1];
			elementACL.name += counter;
			elementACL.value=selectedACL;
			counter++;
		} else {
			if (obj.name == "FTcheckbox")
			{
				elementPagename = form.elements[i-7];
				elementPagename.name = 'NotPagename';
			}
		}
	}
	
	if (counter > 0)
		return true;
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesSelected" ENCODE="false" ESCAPE="true"/>');
	
	return false;
}

function shouldSelectNoCase(compare,status)
{
	if (compare.toLowerCase() == status.toLowerCase())
		return "SELECTED";
	return "";
}

function shouldSelectInList(item,list)
{
	var lowerItem = item.toLowerCase();
	var lowerList = list.toLowerCase();

	for (var index = lowerList.indexOf(","); index != -1;)
	{
		var listItem = lowerList.substring(0,index);
		lowerList = lowerList.substring(index+1,lowerList.length);
		if (listItem == lowerItem)
			return "SELECTED";
		index = lowerList.indexOf(",");
	}

	if (lowerItem == lowerList)
		return "SELECTED";
	return "";
}

function selectAll(form,select,checkbox)
{
<![CDATA[
    for(i=0; i < form.elements.length; i++)
	{
        obj = form.elements[i];
        if(obj.name == checkbox)
			obj.checked = select;
	}
]]>
}

function isSystemPage(page)
{
	if ( page.indexOf("FutureTense/Apps/AdminForms") == 0 )
	   return true;
	return false;
}

function noMatches(query)
{
	alert('<XLAT.STREAM KEY="dvin/AdminForms/NoPagesMatch" ENCODE="false" ESCAPE="true"/>' + query + '"');
}

</SCRIPT>

</FTCS>
 

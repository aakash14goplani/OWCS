<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">

<FTCS Version="1.1">
<!--
$Logfile: /VerticalApps/XcelerateD/install/Xcelerate/Populate/ElementCatalog/OpenMarket/Xcelerate/Actions/Publish/RenderAsset.xml $
$Revision: 14 $
$Modtime: 6/08/04 12:34p $
-->

<!--
- Confidential and Proprietary Information of FutureTense Inc.
-					All Rights Reserved.
-
- Render.xml
-
- DESCRIPTION
-    General purpose Render function.  Loads the associated asset and calls
-    the selected Template rootelement.   This element got created by cloning
-    RenderPage, Render elements.  The objective of this element is to provide
-    faster rendering for the cases where the template author wants speed
-    and access to global variables of the calling template.
-
-    If a publication id has not been passed in by pid or established in
-    the session variable "pubid", then a publication must be established
-    by a call to the element named by the property xcelerate.SetPub.  If
-    it fails to set pubid then rendering cannot proceed.
-
-    Asset selector argument combinations:
-    	1) NAME		Render the preloaded asset
-	2) NAME,CODE	Render a child of the asset
-	3) TYPE,OBJECTID[,OBJECTVERSION]
-			Render the indicated asset.  
-			OBJECTVERSION is not yet supported.
-    This selected asset is presented to the Template's rootelement as
-    pre-loaded object "asset" with all of its fields scattered into the
-    variables with the prefix "asset".  
-
- EXAMPLES
- To display the asset description field in the rendered output:
-    	<CSVAR NAME="Variables.asset:description"/>
-
- To render an associated asset, with the association name "SeeAlso", and
- overriding the default Template to use the "Summary" template
- (Note: Template is called Display Style in the user interface):
-	<CALLELEMENT NAME="OpenMarket/Xcelerate/Actions/Publish/RenderAsset">
-	    <ARGUMENT NAME="NAME" VALUE="asset"/>
-	    <ARGUMENT NAME="CODE" VALUE="SeeAlso"/>
-	    <ARGUMENT NAME="TEMPLATE" VALUE="Summary"/>
-	</CALLELEMENT>
-
- INPUT
-    NAME		Pre-loaded asset object pool name.
-			Use <ASSET.LOAD> beforehand to load the asset 
-			if this is not "asset". 
-    CODE		Asset association name.
-    TYPE		Asset type name
-    OBJECTID		Asset ID
-    OBJECTVERSION	Reserved for future use.
-    TEMPLATE		(optional) Override template name
-    PARENTID		(optional) Overrides Variables.p.  Normally omitted.
-    PACKEDARGS         (optional) Passes arguments to TEMPLATE.
-                       Names & Values need to be 'URL safe'.  Unsafe
-                       characters can be escaped using xml tag 
-                       'URL.PACK'.
-
- IMPLICIT INPUTS (set by or passed into RenderStart, or publishing code)
-    SessionVariables.pubid (optional) Publication id.  Normally set by
-    			Content Centre login for preview, and set by the
-			element named by property xcelelem.setpubid the very
-			first time a visitor comes to the site.
-    Variables.p	(optional) Parent Page asset's ID.  Normally omitted, 
-    			this is set automatically when rendering from within
-			a Page asset's Template.
-    Variables.rendermode (optional) "preview", "export", or "live" (default)
-    			The SiteCatalog for preview and export will set this
-			in the resargs.  Live viewing pages take the default.
-    Variables.urltype	(optional) "static" or "dynamic". Default is "dynamic".
-    			Export to Disk will set this to static.
-    Variables.ps	PubSession id.  Set by Export to Disk only.  
-    			The session is loaded and named render:session.
-    Variables.pagename	(optional) The current Template's pagename, if there
-    			is a current Template which is rendering.
-    Variables.inifile	(optional) Ditto for current Template's inifile.
-
-
- OUTPUT
-    Variables.rendermode Same as input, or the default is filled in.
-    Variables.urltype	Same as input, or the default is filled in.
-    Variables.errno	The errno from preparing to call the Temnplate
-    			rootelement, or the errno from the rootelement call.
-			Note: Export to Disk is not able to notice this and
-			report if rendering failed during publishing.
-->


<!-- Debug to log if uncommented: ->
    <LOGMSG STR="*** Render ***"/>
    <LOGMSG STR="Current asset: Variables.asset:name (Variables.c #Variables.cid)"/>
    <LOGMSG STR="Current t: Variables.t"/>
    <LOGMSG STR="NAME: Variables.NAME"/>
    <LOGMSG STR="CODE: Variables.CODE"/>
    <LOGMSG STR="TYPE: Variables.TYPE"/>
    <LOGMSG STR="OBJECTID: Variables.OBJECTID"/>
    <LOGMSG STR="TEMPLATE: Variables.TEMPLATE"/>
    <LOGMSG STR="PARENTID: Variables.PARENTID"/>
    <LOGMSG STR="pagename: Variables.pagename"/>
    <LOGMSG STR="inifile: Variables.inifile"/>
    <LOGMSG STR="pubid: SessionVariables.pubid"/>
    <LOGMSG STR="p: Variables.p"/>
    <LOGMSG STR="rendermode: Variables.rendermode"/>
    <LOGMSG STR="urltype: Variables.urltype"/>
    <LOGMSG STR="ps: Variables.ps"/>
<!-end debug-->

<!-- 
- Parse the asset selector with little error checking.
-->

<if COND="IsVariable.TYPE=true">
<then>
    <setvar NAME="render:c" VALUE="Variables.TYPE"/>
</then>
</if>

<if COND="IsVariable.OBJECTID=true">
<then>
    <setvar NAME="render:cid" VALUE="Variables.OBJECTID"/>
</then>
</if>

<if COND="IsVariable.OBJECTVERSION=true">
<then>
    <setvar NAME="render:cv" VALUE="Variables.OBJECTVERSION"/>
</then>
</if>

<if COND="IsVariable.NAME=true">
<then>
    <if COND="IsVariable.CODE=true">
    <then>
        <ASSET.CHILDREN NAME="Variables.NAME" LIST="render:child" CODE="Variables.CODE"/>
	<if COND="IsList.render:child=false">
	<then>
 	    <setvar NAME="errno" VALUE="-111"/>
	</then>
	<else>
	    <setvar NAME="render:c" VALUE="render:child.otype"/>
	    <setvar NAME="render:cid" VALUE="render:child.oid"/>
	</else>
	</if>
    </then>
    <else>
        <ASSET.GET NAME="Variables.NAME" FIELD="id" OUTPUT="render:cid"/>
	<ASSET.GETASSETTYPE NAME="Variables.NAME" OUTNAME="render:type"/>
	<ASSETTYPE.GET NAME="render:type" FIELD="assettype" OUTPUT="render:c"/>
    </else>
    </if>
</then>
</if>

<if COND="IsVariable.render:c=true">
<then>
    <!--
    - Set defaults
    -->
    <calljava CLASS="com.openmarket.framework.commands.SetDefault">
	<argument NAME="rendermode" VALUE="live"/>
	<argument NAME="urltype"    VALUE="dynamic"/>
    </calljava>


    <!-- set optional TEMPLATE -->
    <if COND="IsVariable.TEMPLATE=true">
    <then>
       <URL.PACK VALUE="Variables.TEMPLATE" VARNAME="t"/>
    </then>
    </if>

    <!-- set p (based on PARENTID, existing p, or current asset -->
    <if COND="IsVariable.PARENTID=true">
    <then>
       <setvar NAME="p" VALUE="Variables.PARENTID"/>
    </then>
    <else>
	<if COND="IsVariable.p=false">
        <then>
	    <!-- If there is a current asset and it is of type Page, then pass p -->
	    <ASSET.GETASSETTYPE NAME="asset" OUTNAME="render:type"/>    
	    <ASSETTYPE.GET NAME="render:type" FIELD="assettype" OUTPUT="render:assettype"/>
	    <if COND="IsError.Variables.errno=true">
	    <then>
		<setvar NAME="errno" VALUE="0"/>
	    </then>
	    <else>
		<if COND="Variable.render:assettype=Page">
		<then>
		    <ASSETTYPE.GET NAME="render:type" FIELD="id" OUTPUT="p"/>
		</then>
		</if>
	    </else>
	    </if>
	</then>
	</if>
    </else>
    </if>

    <!-- Save the current page's arguments -->
    <setvar NAME="render:saveC" VALUE="Variables.c"/>
    <setvar NAME="render:saveCID" VALUE="Variables.cid"/>
    <!--Save even the packed optional args, in case the caller was using them-->
    <setvar NAME="render:saveT" VALUE="Variables.t"/>
    <setvar NAME="render:saveP" VALUE="Variables.p"/>
    <setvar NAME="render:savePAGENAME" VALUE="Variables.pagename"/>
    <setvar NAME="render:saveINIFILE" VALUE="Variables.inifile"/>

    <!-- Save the current "asset" object -->
    <CALLJAVA CLASS="com.openmarket.xcelerate.util.ObjectStack">
	<ARGUMENT NAME="cmd" VALUE="push"/>
	<ARGUMENT NAME="name" VALUE="asset"/>
	<ARGUMENT NAME="stack" VALUE="_CC_RENDER_ASSET"/>
    </CALLJAVA>

    <setvar NAME="render:packedargs" VALUE="Variables.empty"/>
    <if COND="IsVariable.PACKEDARGS=true">
    <then>
        <if COND="Variables.PACKEDARGS!=Variables.empty">
        <then>
            <setvar NAME="render:packedargs" VALUE="Variables.PACKEDARGS"/>
            <setvar NAME="render:packedsep" VALUE="%26"/>
        </then>
        </if>
    </then>
    </if>

    <setvar NAME="c"          VALUE="Variables.render:c"/>
    <setvar NAME="cid"        VALUE="Variables.render:cid"/>
 
    <!----- Following lines are copied from Render.xml ----->

    <!-- Henceforth, error message reporting is deferred -->
    <setvar NAME="render:doproceed" VALUE="true"/>

    <!--
     - Load the selected asset
     -->
    <ASSET.LOAD TYPE="Variables.c" OBJECTID="Variables.cid" NAME="asset"/>

    <if COND="IsError.Variables.errno=true">
    <then>
        <setvar NAME="render:doproceed" VALUE="InvalidContentId"/>

        <if COND="Variables.rendermode=preview">
        <then>
 		<HR/><FONT COLOR="#FF0000"><STRONG><XLAT.STREAM KEY="dvin/UI/Publish/PREVIEWWARNINGnotfindccid" errno="Variables.errno" c="Variables.c" cid="Variables.cid" EVALALL="false"/></STRONG></FONT><HR/>
        </then>
        </if>
     </then>
     <else>
        <ASSET.SCATTER NAME="asset" PREFIX="asset"/>

        <!--If this is a Page, override p -->
        <if COND="Variables.c=Page">
        <then>
            <ASSET.SITEPARENT NAME="asset" OUTNAME="render:parent"/>
            <if COND="IsError.Variables.errno=false">
            <then>
                <ASSET.GET NAME="render:parent" FIELD="id" OUTPUT="p"/>
            </then>
            </if>
        </then>
        </if>

        <!-- Look up the Template given name, asset type -->
	    <if COND="IsVariable.t=true">
	     <then>
	 			<ASSET.GETTEMPLATEROOTELEMENT NAME="asset" OUTPUT="render:element" TEMPLATE="Variables.t"/>
	     </then>
	     <else>
				<ASSET.GETTEMPLATEROOTELEMENT NAME="asset" OUTPUT="render:element"/>
			</else>
			</if>

        <if COND="Variables.errno!=0">
        <then>
            <setvar NAME="render:errno" VALUE="Variables.errno"/>
            <setvar NAME="template_name" VALUE="Variables.t"/>
            <setvar NAME="render:doproceed" VALUE="NoTemplate"/>
        </then>
        </if>

        <!--
         - Call the Template's rootelement
         -->
        <if COND="Variables.render:doproceed=true">
        <then>
            <if COND="IsElement.Variables.render:element=true">
            <then>
               <REMOVEVAR NAME="NAME"/>
               <REMOVEVAR NAME="CODE"/>
               <REMOVEVAR NAME="TYPE"/>
               <REMOVEVAR NAME="OBJECTID"/>
               <REMOVEVAR NAME="OBJECTVERSION"/>
               <REMOVEVAR NAME="TEMPLATE"/>
               <REMOVEVAR NAME="PARENTID"/>
               <REMOVEVAR NAME="PACKEDARGS"/>
               <callelement NAME="Variables.render:element"/>
               <if COND="IsError.Variables.errno=true">
               <then>
                   <setvar NAME="render:errno" VALUE="Variables.errno"/>
                   <!--
		    - The element code failed internally.  The Template
		    - developer should display a custom message.
		    - We only display the errno (below).
      	            -->
                   <setvar NAME="render:doproceed" VALUE="Variables.empty"/>
               </then>
               </if>
             </then>
             <else>
                   <setvar NAME="render:doproceed" VALUE="NoTemplateElement"/>
              </else>
             </if>
         </then>
         </if>

         <if COND="IsError.Variables.render:errno=true">
	 <then>
             <if COND="Variables.rendermode=preview">
             <then>
	        <HR/><FONT COLOR="#FF0000"><STRONG><XLAT.STREAM KEY="dvin/UI/Publish/PREVIEWWARNINGRendererrorwhileAsset"/></STRONG></FONT><HR/>
                 <removevar NAME="render:errno"/>
              </then>
              </if>
          </then>
          </if>

    </else>
    </if>

    <if COND="Variables.render:doproceed!=true">
    <then>
         <if COND="Variables.render:doproceed!=Variables.empty">
         <then>
             <table><tr><td>
             <callelement NAME="OpenMarket/Xcelerate/Actions/Util/ShowError">
		    <argument NAME="error" VALUE="Variables.render:doproceed"/>
		    <argument NAME="AssetType" VALUE="Variables.c"/>
		    <argument NAME="id" VALUE="Variables.cid"/>
		    <argument NAME="errorbyemail" VALUE="false"/>
             </callelement>
             </td></tr></table>
         </then>
	 </if>
    </then>
    </if>

    <!-- end of copy from Render.xml -->

    <!-- Restore the "asset" object -->
    <CALLJAVA CLASS="com.openmarket.xcelerate.util.ObjectStack">
	<ARGUMENT NAME="cmd" VALUE="pop"/>
	<ARGUMENT NAME="name" VALUE="asset"/>
	<ARGUMENT NAME="stack" VALUE="_CC_RENDER_ASSET"/>
    </CALLJAVA>

    <!-- Restore the current page's arguments -->
    <setvar NAME="c" VALUE="Variables.render:saveC"/>
    <setvar NAME="cid" VALUE="Variables.render:saveCID"/>
    <setvar NAME="t" VALUE="Variables.render:saveT"/>
    <setvar NAME="p" VALUE="Variables.render:saveP"/>
    <!--If undefined before it doesn't matter if define them on the way out-->
    <setvar NAME="pagename" VALUE="Variables.render:savePAGENAME"/>
    <setvar NAME="inifile" VALUE="Variables.render:saveINIFILE"/>
</then>
</if>

<!-- Debug to log if uncommented: ->
    <LOGMSG STR="errno: Variables.errno"/>
    <LOGMSG STR="c: Variables.c"/>
    <LOGMSG STR="cid: Variables.cid"/>
    <LOGMSG STR="t: Variables.t"/>
    <LOGMSG STR="p: Variables.p"/>
    <LOGMSG STR="pagename: Variables.pagename"/>
    <LOGMSG STR="inifile: Variables.inifile"/>
    <LOGMSG STR="*** end Render ***"/>
<!- end debug -->

</FTCS>

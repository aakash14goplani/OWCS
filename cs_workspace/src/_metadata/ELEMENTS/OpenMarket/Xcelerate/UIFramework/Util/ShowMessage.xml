<?xml version="1.0" ?>
<!DOCTYPE FTCS SYSTEM "futuretense_cs.dtd">

<FTCS Version="1.1">
<!-- 
$Logfile: /VerticalApps/XcelerateC/install/Xcelerate/Populate/ElementCatalog/OpenMarket/Xcelerate/UIFramework/Util/ShowMessage.xml $ 
$Revision: 15 $ 
$Modtime: 2/27/04 2:46p $ 
--> 
<!--
- Confidential and Proprietary Information of FutureTense Inc.
-					All Rights Reserved.
-
- ShowMessage
-
- DESCRIPTION
-	UI utility to display a Content Server Direct message - info, warning or error
-
- Arguments
-	severity: One of error, info or warning
-	msgtext: The text of the message to display
- 	or
-	elem: The name of the element from which to read the message
- 
- HISTORY
-	Sandip Ghoshal - 25-01-2013 - Modified for Bug 14808129 - errno coming from the calling element is overwritten by the STRING.ENCODE tag, hence it is 	-	preserved into the variable errorcode, called elements should use errorcode instead of errno. 
-	 
-->
<!-- Preserving the errno to be used in the element(EnterAssetFailed) because it is overwritten by the STRING.ENCODE tag -->
<SETVAR NAME="errorcode" VALUE="Variables.errno"/>
<!-- Default severity is info -->
<IF COND="Variables._showMessage!=true">
<THEN>
<SETCOUNTER NAME="_showMessageCount" VALUE="1"/>
<div id="showmessagediv">
<IF COND="IsVariable.severity=false">
<THEN>
	<setvar NAME="severity" VALUE="info"/>
</THEN>
</IF>
<STRING.ENCODE VARIABLE="cs_imagedir" VARNAME="cs_imagedir"/>
<STRING.ENCODE VARIABLE="cs_environment" VARNAME="cs_environment"/>
<replaceall list="Variables.cs_imagedir,Variables.cs_environment">
<![CDATA[
<script>
function showMessage(){

   
	var _msgArea = document.getElementById("msgArea"),
		_msgs = new Array(),
		cs_environment = 'Variables.cs_environment',
		isValueInArray = function(arr, val) {
			for (var i = 0; i < arr.length; i++) {
				if (val === arr[i]) return true;
			}
			return false;
		};

	if ('ucform' === cs_environment)
	{
		for(var i=1,j=0 ; i <= msgCounter ; i++){
			var msgDiv = document.getElementById('_showMessageVal_' + i);
			var msgTxt = document.getElementById('msg-txt_' + i);
			if(msgDiv){
				if(false === isValueInArray(_msgs, msgTxt.innerHTML)){
					var msgClassName = msgDiv.className,
						severity = msgClassName.substring(msgClassName.indexOf("-") + 1);
					SitesApp.getActiveView().message(msgTxt.innerHTML, severity);
					_msgs[j++] = msgTxt.innerHTML;
				}
			}
		}
		closeTheMessage();
	} 
	else 
	{
	 	if(_msgArea){

			for(var i=1,j=0 ; i <= msgCounter ; i++){
				var msgDiv = document.getElementById('_showMessageVal_' + i);
				var msgTxt = document.getElementById('msg-txt_' + i);
				if(msgDiv){
					msgDiv.style.borderStyle = 'none';
					if(isValueInArray(_msgs, msgTxt.innerHTML) === false) {
						_msgArea.appendChild(msgDiv.parentNode.removeChild(msgDiv));
					} else {
						msgDiv.parentNode.removeChild(msgDiv);
					}
					
					// To replace every occurrence of a string in JavaScript, you must provide the replace() 
					// method a regular expression with a global modifier as the first parameter:
					cleanTheMessage('msg-txt_' + i) ; 
					
					_msgs[j] = msgTxt.innerHTML;
					j++;
				}
			}
			//Enable the close funtionality
			document.getElementById('closeDiv').style.display = '';
			
		} else {
			if( msgCounter > 1) {
				for(var i=1,j=0; i <= msgCounter; i++) {
					var msgContainer = document.getElementById('showmessagediv');
					var msgDiv = document.getElementById('_showMessageVal_' + i);
					var msgTxt = document.getElementById('msg-txt_' + i);
					if(msgDiv) {
						if(isValueInArray(_msgs, msgTxt.innerHTML) !== false) {
							msgDiv.parentNode.removeChild(msgDiv);
						} else {
							if(msgCounter !== i) {
								msgDiv.style.borderBottomStyle = 'none';
							}
							if(i > 1) {
								msgContainer.appendChild(msgDiv.parentNode.removeChild(msgDiv));
							}

						}
						_msgs[j] = msgTxt.innerHTML;
						j++;
					}
				}
			} 
			else {
				// To replace every occurrence of a string in JavaScript, you must provide the replace() 
				// method a regular expression with a global modifier as the first parameter:
				cleanTheMessage("msg-txt_"+msgCounter);
			}
			
		}
	}
}

// Utility function to get the element object 
// and clean all break tags 
function cleanTheMessage ( id ) {
	var	brTag = "<br/>",
	brTagReplaceStrRegex = /&lt;br\/&gt;/g;
	
	// Get the Message Text Single Div 
	var  _ms0 = document.getElementById(id) ; 
	if ( _ms0 ) {
		// Render and Break Tag in essence new line if in error messages
		_ms0.innerHTML = _ms0.innerHTML.replace(brTagReplaceStrRegex, brTag);
	}
}
 
function closeTheMessage() {
	for(var i=1; i <= msgCounter; i++){
		var msgDiv = document.getElementById('_showMessageVal_' + i);
		if(msgDiv) {
			msgDiv.style.display = 'none';
		}
	}
	
	// If border container is present then resize it
	if(dojo && dijit.byId('dijit_layout_BorderContainer_0')) {
		dijit.byId('dijit_layout_BorderContainer_0').resize();
	}	
}

var msgCounter = 0;
//dojo addOnLoad is more reliable so use it wherever dojo is available
if(dojo)
	dojo.addOnLoad(function() {
		showMessage();
		if(dijit.byId('dijit_layout_BorderContainer_0')) {
			dijit.byId('dijit_layout_BorderContainer_0').resize();
		}
	});
else {
	window.onload=function(){showMessage()};
}
</script>
]]>
</replaceall>


<div id="_showMessageVal_Counters._showMessageCount" class="message-Variables.severity" replaceall="Variables.severity,Counters._showMessageCount">
	<img id="_showMessageImg_Counters._showMessageCount" class="icon-img" src="Variables.cs_imagedir/graphics/common/msg/Variables.severity.png" REPLACEALL="Variables.cs_imagedir,Variables.severity,Counters._showMessageCount"/>
	<div id="msg-txt_Counters._showMessageCount" class="msg-txt" REPLACEALL="Counters._showMessageCount">
		<IF COND="IsVariable.elem=true">
						<THEN>

						<!-- Populate ErrorMessage Object for  new UI -->
						<SETVAR NAME="ERRORMSG_SEVERITY" VALUE="Variables.severity"/>
						<SETVAR NAME="ERRORMSG_ERRNO" VALUE="Variables.errno"/>

						<!-- Build the name of the error element corresponding to the error -->
						<SETVAR NAME="element" VALUE="OpenMarket/Xcelerate/Errors/Variables.elem"/>
						
						<!-- Check to see if there is an error element for this error -->
						<IF COND="IsElement.Variables.element=true">
							<THEN>
								<SETVAR NAME="ERRORMSG_ELEMENT" VALUE="Variables.element"/>	
								
								<CALLELEMENT NAME="Variables.element"/>
								<!-- Populate ErrorMessage Object for  new UI -->
								
							</THEN>
							<ELSE>	
								<XLAT.LOOKUP KEY="dvin/UI/Error/ContentServerDirecterrorelementmissingcode" VARNAME="_XLAT_" errno="Variables.errno" error="Variables.error" EVALALL="false"/>
								<SETVAR NAME="errormsg" VALUE="Variables._XLAT_"/>
								<SETVAR NAME="ERRORMSG_MESSAGE" VALUE="Variables._XLAT_"/>
							</ELSE>
						</IF>	
						</THEN>
						<ELSE>
							<CSVAR NAME="Variables.msgtext"/>
							<!-- Populate ErrorMessage Object for  new UI -->
							<SETVAR NAME="ERRORMSG_MESSAGE" VALUE="Variables.msgtext"/>
						</ELSE>
					</IF>	
					</div>
					<div id="closeDiv" style="display:none;" class="right close-img" onclick="closeTheMessage();"></div>  
</div>
</div>
<SETVAR NAME="_showMessage" VALUE="true"/>
</THEN>
<ELSE>
	<INCCOUNTER NAME="_showMessageCount" VALUE="1"/>
	<div id="_showMessageVal_Counters._showMessageCount" class="message-Variables.severity"  style="border-top:0px;" REPLACEALL="Variables.severity,Counters._showMessageCount" >
		<img id="_showMessageImg_Counters._showMessageCount" class="icon-img" src="Variables.cs_imagedir/graphics/common/msg/Variables.severity.png" REPLACEALL="Variables.cs_imagedir,Variables.severity,Counters._showMessageCount"/>
		<div id="msg-txt_Counters._showMessageCount" class="msg-txt" REPLACEALL="Counters._showMessageCount">
			<IF COND="IsVariable.elem=true">
			<THEN>
			<!-- Populate ErrorMessage Object for  new UI -->
			<SETVAR NAME="ERRORMSG_SEVERITY" VALUE="Variables.severity"/>
			<SETVAR NAME="ERRORMSG_ERRNO" VALUE="Variables.errno"/>

			<!-- Build the name of the error element corresponding to the error -->
			<SETVAR NAME="element" VALUE="OpenMarket/Xcelerate/Errors/Variables.elem"/>
			
			<!-- Check to see if there is an error element for this error -->
			<IF COND="IsElement.Variables.element=true">
				<THEN>
					<SETVAR NAME="ERRORMSG_ELEMENT" VALUE="Variables.element"/>	
					
					<CALLELEMENT NAME="Variables.element"/>
					<!-- Populate ErrorMessage Object for  new UI -->
					
				</THEN>
				<ELSE>	
					<XLAT.LOOKUP KEY="dvin/UI/Error/ContentServerDirecterrorelementmissingcode" VARNAME="_XLAT_" errno="Variables.errno" error="Variables.error" EVALALL="false"/>
					<SETVAR NAME="errormsg" VALUE="Variables._XLAT_"/>
					<SETVAR NAME="ERRORMSG_MESSAGE" VALUE="Variables._XLAT_"/>
				</ELSE>
			</IF>	
			</THEN>
			<ELSE>
				<CSVAR NAME="Variables.msgtext"/>
				<!-- Populate ErrorMessage Object for  new UI -->
				<SETVAR NAME="ERRORMSG_MESSAGE" VALUE="Variables.msgtext"/>
			</ELSE>
			</IF>	
		</div>
	</div>
</ELSE>
</IF>
<IF COND="Variables.severity=error">
<THEN>
	<SETVAR NAME="isErrorOccured" VALUE="true"/>
</THEN>
</IF>
<REPLACEALL LIST="Counters._showMessageCount,Variables.severity">
<script>
	msgCounter=Counters._showMessageCount;
</script>
</REPLACEALL>
</FTCS> 
